{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","workspace/preferences/PreferenceForms.js","workspace/preferences/Preferences.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","useStyles","root","margin","borderRadius","width","details","padding","display","flexDirection","PreferenceForms","groups","React","useState","extractValues","values","setValues","Card","CardContent","RecordForm","onValueChange","field","value","newValues","JSON","parse","stringify","tabIndex","showMore","CardActions","Button","Icon","TabPanel","children","index","other","role","hidden","Box","p","card","justifyContent","tabs","paddingTop","tab","profileForm","label","required","readOnly","quickAdd","unique","tooltip","multipleValues","defaultValue","companyForm","options","securityForm","Preferences","setValue","Grid","container","item","xs","md","Tabs","orientation","onChange","event","newValue","Tab"],"mappings":"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","file":"static/js/17.77938785.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Button from \"@material-ui/core/Button\";\nimport RecordForm, { extractValues } from \"../RecordForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 0,\n        borderRadius: 0,\n        width: \"50%\",\n    },\n    details: {\n        padding: 24,\n    },\n    actions: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n    },\n    action: {\n        width: 100,\n    },\n    actionIcon: {\n        marginRight: 4,\n        display: \"inline-block\",\n    },\n}));\n\nexport default function PreferenceForms(props) {\n    const classes = useStyles();\n    const { groups } = props;\n    const [values, setValues] = React.useState(extractValues(groups));\n\n    const handleValueChange = (field, value) => {\n        const newValues = JSON.parse(JSON.stringify(values));\n        newValues[field.identifier] = value;\n\n        setValues(newValues);\n    };\n    const tabIndex = 0;\n    const showMore = true;\n\n    return (\n        <div>\n            <Card className={classes.root} variant=\"outlined\">\n                <CardContent className={classes.details}>\n                    <RecordForm\n                        groups={groups}\n                        values={values}\n                        onValueChange={handleValueChange}\n                        tabIndex={tabIndex}\n                        showMore={showMore}\n                    />\n                </CardContent>\n                <CardActions className={classes.actions}>\n                    <Button\n                        size=\"small\"\n                        variant=\"text\"\n                        color=\"primary\"\n                        className={classes.action}\n                    >\n                        <Icon className={classes.actionIcon}>save</Icon>\n                        Save\n                    </Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport WorkspaceToolbar from \"../../workspace/common/WorkspaceToolbar\";\nimport PreferenceForms from \"./PreferenceForms\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}> {children}</Box>}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: 24,\n        borderRadius: 0,\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        flexDirection: \"column\",\n        padding: 0,\n    },\n    tabs: {\n        margin: 0,\n        paddingTop: 24,\n    },\n    tab: {\n        margin: 0,\n    },\n}));\n\nconst profileForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"First Name\",\n                identifier: \"firstName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first name of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Last Name\",\n                identifier: \"lastName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The last name of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nconst companyForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The name of the company.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 1\",\n                identifier: \"addressLine1\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 2\",\n                identifier: \"addressLine2\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"City\",\n                identifier: \"city\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The city.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"State\",\n                identifier: \"state\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The state where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Country\",\n                identifier: \"country\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The country where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Zip Code\",\n                identifier: \"zipCode\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The zip code of the location where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Website\",\n                identifier: \"website\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The website of the company.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Industry\",\n                identifier: \"industry\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"business_service\",\n                        title: \"Business Service\",\n                    },\n                    {\n                        value: \"computer_software\",\n                        title: \"Computer Software\",\n                    },\n                    {\n                        value: \"computer_hardware\",\n                        title: \"Computer Hardware\",\n                    },\n                    {\n                        value: \"retail\",\n                        title: \"Retail\",\n                    },\n                    {\n                        value: \"education\",\n                        title: \"Education\",\n                    },\n                    {\n                        value: \"entertainment\",\n                        title: \"Entertainment\",\n                    },\n                    {\n                        value: \"finance_real_estate_insurance\",\n                        title: \"Finance, Real Estate, Insurance\",\n                    },\n                    {\n                        value: \"government\",\n                        title: \"Government\",\n                    },\n                    {\n                        value: \"healthcare\",\n                        title: \"Healthcare\",\n                    },\n                    {\n                        value: \"nonprofit\",\n                        title: \"Nonprofit\",\n                    },\n                    {\n                        value: \"telecommunications\",\n                        title: \"Telecommunications\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The industry which the company serves.\",\n                multipleValues: true,\n                defaultValue: null,\n            },\n        ],\n    },\n];\n\nconst securityForm = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Old Password\",\n                identifier: \"oldPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The old password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"New Password\",\n                identifier: \"newPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The new password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Confirm Password\",\n                identifier: \"confirmPassword\",\n                type: \"password\",\n                required: true,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The new password of the user.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nexport default function Preferences() {\n    const classes = useStyles();\n    const [tabIndex, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Preferences\" />\n            <Grid container={true}>\n                <Grid item={true} xs={12} md={2}>\n                    <Card variant=\"outlined\" className={classes.card}>\n                        <CardContent className={classes.details}>\n                            <Tabs\n                                orientation=\"vertical\"\n                                variant=\"fullWidth\"\n                                value={tabIndex}\n                                onChange={handleChange}\n                                className={classes.tabs}\n                            >\n                                <Tab label=\"Profile\" />\n                                <Tab label=\"Security\" />\n                                <Tab label=\"Company\" />\n                            </Tabs>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item={true} xs={12} md={10}>\n                    <TabPanel value={tabIndex} index={0}>\n                        <PreferenceForms groups={profileForm} />\n                    </TabPanel>\n                    <TabPanel value={tabIndex} index={1}>\n                        <PreferenceForms groups={securityForm} />\n                    </TabPanel>\n                    <TabPanel value={tabIndex} index={2}>\n                        <PreferenceForms groups={companyForm} />\n                    </TabPanel>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n"],"sourceRoot":""}