{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","workspace/analytics/Summary.js","workspace/analytics/SubscriptionsSummary.js","workspace/analytics/LineGraph.js","workspace/analytics/SubscriberCharts.js","workspace/analytics/RevenueSummary.js","workspace/analytics/BarGraph.js","workspace/analytics/RevenueCharts.js","workspace/analytics/PlanSummary.js","workspace/analytics/PlanCharts.js","workspace/analytics/Analytics.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","useStyles","content","paddingTop","paddingBottom","flex","button","padding","upIcon","verticalAlign","fontSize","up","success","downIcon","down","error","small","Summary","Typography","period","number","delta","change","root","borderRadius","minHeight","maxHeight","display","flexDirection","justifyContent","details","SubscriptionsSummary","data","Card","CardContent","subscribers","subscribersChange","subscribersDelta","Divider","ltv","ltvChange","ltvDelta","churnRate","churnChange","churnDelta","style","margin","marginBottom","width","height","tooltip","item","subtitle","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","LineGraph","name","dataKey","info","CustomTooltip","active","payload","label","Paper","value","top","right","left","bottom","strokeDasharray","stroke","fill","activeDot","r","space","SubscriberCharts","subscriberData","churnRateData","RevenueSummary","totalRevenue","totalRevenueChange","totalRevenueDelta","recoveredRevenue","recoveredRevenueChange","recoveredRevenueDelta","dueRevenue","dueRevenueChange","dueRevenueDelta","parent","colors","blues","reds","purples","oranges","BarGraph","names","keys","index","bar","stackId","RevenueCharts","revenueData","transactionData","PlanSummary","conversions","conversionsChange","conversionsDelta","conversionRate","conversionRateChange","conversionRateDelta","cancellationRate","cancellationRateChange","cancellationRateDelta","PlanCharts","planData","conversionData","mapDispatchToProps","fetchAnalytics","connect","analytics","subscriptionSummary","revenueSummary","planSummary","useEffect","box","Grid","container","xs","md"],"mappings":"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","file":"static/js/16.2680fb01.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Up from \"@material-ui/icons/ExpandLessSharp\";\nimport Down from \"@material-ui/icons/ExpandMoreSharp\";\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingTop: 24,\n        paddingBottom: 24,\n        flex: \"1 0 auto\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function Summary(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.content}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                {props.title}\n            </Typography>\n            <Typography\n                variant=\"subtitle1\"\n                color=\"textSecondary\"\n                className={classes.small}\n            >\n                {props.period}\n            </Typography>\n            <Typography component=\"h3\" variant=\"h3\">\n                {props.number}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {props.delta === \"positive\" ? (\n                    <div className={classes.up}>\n                        <Up className={classes.upIcon} />\n                        {props.change}\n                    </div>\n                ) : (\n                    <div className={classes.down}>\n                        <Down className={classes.downIcon} />\n                        {props.change}\n                    </div>\n                )}\n            </Typography>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function SubscriptionsSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Subscriptions\"\n                    period={data.period}\n                    number={data.subscribers}\n                    change={data.subscribersChange}\n                    delta={data.subscribersDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Subscriber Lifetime Value\"\n                    period={data.period}\n                    number={`₹ ${data.ltv}`}\n                    change={`₹ ${data.ltvChange}`}\n                    delta={data.ltvDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Subscriber Churn Rate\"\n                    period={data.period}\n                    number={`${data.churnRate}%`}\n                    change={`${data.churnChange}%`}\n                    delta={data.churnDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    Area,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    style: {\n        margin: 8,\n        marginBottom: 48,\n        width: \"auto\",\n        height: 220,\n    },\n    tooltip: {\n        justifyContent: \"center\",\n        padding: 8,\n    },\n    item: {\n        margin: 2,\n    },\n    subtitle: {\n        color: \"#777777\",\n    },\n}));\n\nconst months = {\n    Jan: \"January\",\n    Feb: \"February\",\n    Mar: \"March\",\n    Apr: \"April\",\n    May: \"May\",\n    Jun: \"June\",\n    Jul: \"July\",\n    Aug: \"August\",\n    Sep: \"September\",\n    Oct: \"October\",\n    Nov: \"November\",\n    Dec: \"December\",\n};\n\nfunction LineGraph(props, theme) {\n    const classes = useStyles();\n\n    const { title, name, color, dataKey, info, data } = props;\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active) {\n            return (\n                <Paper className={classes.tooltip} elevation={4}>\n                    <div\n                        className={classes.item}\n                    >{`Month: ${months[label]}`}</div>\n                    <hr />\n                    <div className={classes.item}>\n                        {`${name}: ${payload[0].value}`}\n                    </div>\n                </Paper>\n            );\n        }\n        return null;\n    };\n    return (\n        <div className={classes.style}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                <div className={classes.title}>{title}</div>\n                <div className={classes.subtitle}>{info}</div>\n            </Typography>\n            <ResponsiveContainer>\n                <AreaChart\n                    data={data}\n                    margin={{\n                        top: 24,\n                        right: 24,\n                        left: 8,\n                        bottom: 24,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"2 2\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Area\n                        type=\"monotone\"\n                        dataKey={dataKey}\n                        stroke={color}\n                        fill={color}\n                        activeDot={{ r: 4 }}\n                    />\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default LineGraph;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LineGraph from \"./LineGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    content: {\n        minHeight: 600,\n        maxHeight: 600,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    style: {\n        margin: 20,\n        width: \"auto\",\n        height: 240,\n    },\n    space: {\n        margin: 4,\n    },\n}));\n\nfunction SubscriberCharts(props) {\n    const classes = useStyles();\n\n    const { subscriberData, churnRateData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.content}>\n                <LineGraph\n                    data={subscriberData}\n                    title=\"Net Subscriber Change\"\n                    name=\"Subscribers\"\n                    dataKey=\"subscribers\"\n                    color=\"#4285F4\"\n                    info=\"The net change in the absolute number of subscribers.\"\n                />\n                <div className={classes.space}></div>\n                <LineGraph\n                    data={churnRateData}\n                    title=\"Subscriber Churn Rate\"\n                    name=\"Churn Rate\"\n                    dataKey=\"churnRate\"\n                    color=\"#EA4335\"\n                    info=\"The rate at which customers stop subscribing.\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default SubscriberCharts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function RevenueSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Billed Revenue\"\n                    period={data.period}\n                    number={`₹ ${data.totalRevenue}`}\n                    change={`₹ ${data.totalRevenueChange}`}\n                    delta={data.totalRevenueDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Recovered Revenue\"\n                    period={data.period}\n                    number={`₹ ${data.recoveredRevenue}`}\n                    change={`₹ ${data.recoveredRevenueChange}`}\n                    delta={data.recoveredRevenueDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Revenue Past Due\"\n                    period={data.period}\n                    number={`₹ ${data.dueRevenue}`}\n                    change={`₹ ${data.dueRevenueChange}`}\n                    delta={data.dueRevenueDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    ResponsiveContainer,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n} from \"recharts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    style: {\n        margin: 16,\n        marginBottom: 88,\n        width: \"auto\",\n        height: 240,\n        justifyContent: \"center\",\n    },\n    tooltip: {\n        justifyContent: \"center\",\n        padding: 8,\n    },\n    item: {\n        margin: 2,\n    },\n    parent: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    subtitle: {\n        color: \"#777777\",\n    },\n}));\n\nconst months = {\n    Jan: \"January\",\n    Feb: \"February\",\n    Mar: \"March\",\n    Apr: \"April\",\n    May: \"May\",\n    Jun: \"June\",\n    Jul: \"July\",\n    Aug: \"August\",\n    Sep: \"September\",\n    Oct: \"October\",\n    Nov: \"November\",\n    Dec: \"December\",\n};\n\nconst colors = {\n    blues: [\"#90CAF9\", \"#42A5F5\", \"#1E88E5\", \"#1565C0\", \"#0D47A1\"],\n    reds: [\"#FFCDD2\", \"#E57373\", \"#F44336\", \"#D32F2F\", \"#B71C1C\"],\n    purples: [\"#E1BEE7\", \"#BA68C8\", \"#9C27B0\", \"#7B1FA2\", \"#4A148C\"],\n    oranges: [\"#FFE0B2\", \"#FFB74D\", \"#FF9800\", \"#F57C00\", \"#E65100\"],\n};\n\nfunction BarGraph(props, theme) {\n    const classes = useStyles();\n    const { title, names, info, data, keys, color } = props;\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active) {\n            return (\n                <Paper className={classes.tooltip} elevation={4}>\n                    <div className={classes.item}>\n                        {`Month: ${months[label]}`}\n                    </div>\n                    <hr />\n                    {props.names.map((name, index) => (\n                        <div className={classes.parent}>\n                            <div\n                                className={classes.item}\n                                style={{ color: colors[color][index] }}\n                            >\n                                ◼\n                            </div>\n                            <div className={classes.item}>\n                                {`${name}: ${payload[index].value}`}\n                            </div>\n                        </div>\n                    ))}\n                </Paper>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className={classes.style}>\n            <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                <div className={classes.title}>{title}</div>\n                <div className={classes.subtitle}>{info}</div>\n            </Typography>\n            <ResponsiveContainer>\n                <BarChart\n                    data={data}\n                    margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"month\" />\n                    <YAxis />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend />\n                    {keys.map((bar, index) => (\n                        <Bar\n                            name={names[index]}\n                            dataKey={bar}\n                            stackId=\"a\"\n                            fill={colors[color][index]}\n                        />\n                    ))}\n                </BarChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default BarGraph;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BarGraph from \"./BarGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n}));\n\nfunction RevenueCharts(props) {\n    const classes = useStyles();\n\n    const { revenueData, transactionData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <BarGraph\n                    data={revenueData}\n                    title=\"Revenue Status\"\n                    names={[\"Billed Revenue\", \"Revenue Past Due\"]}\n                    keys={[\"billedRevenue\", \"revenuePastDue\"]}\n                    info=\"The split-up of recovered and due revenue.\"\n                    color=\"blues\"\n                />\n                <BarGraph\n                    data={transactionData}\n                    title=\"Transactions Breakdown\"\n                    names={[\n                        \"Pending\",\n                        \"Payment Failed\",\n                        \"No Billing Info\",\n                        \"Cancelled\",\n                        \"Converted\",\n                    ]}\n                    keys={[\n                        \"pending\",\n                        \"paymentFailed\",\n                        \"noBillingInfo\",\n                        \"cancelled\",\n                        \"converted\",\n                    ]}\n                    info=\"The split-up of all transactions.\"\n                    color=\"reds\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default RevenueCharts;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Summary from \"./Summary\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 20,\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    button: {\n        padding: 15,\n        marginLeft: \"auto\",\n    },\n    upIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    up: {\n        color: theme.palette.success.main,\n    },\n    downIcon: {\n        verticalAlign: \"bottom\",\n        fontSize: 32,\n    },\n    down: {\n        color: theme.palette.error.main,\n    },\n    small: {\n        fontSize: 14,\n    },\n}));\n\nexport default function PlanSummary(props) {\n    const classes = useStyles();\n    const { data } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.details}>\n                <Summary\n                    title=\"Total Plans Converted\"\n                    period={data.period}\n                    number={data.conversions}\n                    change={data.conversionsChange}\n                    delta={data.conversionsDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Plans Conversion Rate\"\n                    period={data.period}\n                    number={`${data.conversionRate}%`}\n                    change={`${data.conversionRateChange}%`}\n                    delta={data.conversionRateDelta}\n                />\n                <Divider />\n                <Summary\n                    title=\"Plans Cancellation Rate\"\n                    period={data.period}\n                    number={`${data.cancellationRate}%`}\n                    change={`${data.cancellationRateChange}%`}\n                    delta={data.cancellationRateDelta}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BarGraph from \"./BarGraph\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: 0,\n        minHeight: 700,\n        maxHeight: 700,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n    },\n}));\n\nfunction PlanCharts(props) {\n    const classes = useStyles();\n\n    const { planData, conversionData } = props;\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n                <BarGraph\n                    data={planData}\n                    title=\"Plans Breakdown\"\n                    names={[\n                        \"Gold Plan\",\n                        \"Silver Plan\",\n                        \"Bronze Plan\",\n                        \"Platinum Plan\",\n                    ]}\n                    keys={[\n                        \"goldPlan\",\n                        \"silverPlan\",\n                        \"bronzePlan\",\n                        \"platinumPlan\",\n                    ]}\n                    info=\"The split-up of net subscribers for each plan.\"\n                    color=\"purples\"\n                />\n                <BarGraph\n                    data={conversionData}\n                    title=\"Conversions Breakdown\"\n                    names={[\"New\", \"Reactivated\", \"Churned\"]}\n                    keys={[\"new\", \"reactivated\", \"churned\"]}\n                    info=\"The split-up of all monthly changes in your customer base.\"\n                    color=\"oranges\"\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default PlanCharts;\n","import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/actions\";\nimport WorkspaceToolbar from \"../../workspace/common/WorkspaceToolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SubscriptionsSummary from \"./SubscriptionsSummary\";\nimport SubscriberCharts from \"./SubscriberCharts\";\nimport RevenueSummary from \"./RevenueSummary\";\nimport RevenueCharts from \"./RevenueCharts\";\nimport PlanSummary from \"./PlanSummary\";\nimport PlanCharts from \"./PlanCharts\";\n\nconst useStyles = makeStyles((theme) => ({\n    item: {\n        padding: 8,\n    },\n    title: {\n        margin: 24,\n        marginBottom: 0,\n    },\n}));\n\nfunction Analytics(props) {\n    const classes = useStyles();\n    const { analytics, fetchAnalytics } = props;\n\n    const subscriptionSummary = analytics.subscriptionSummary;\n    const revenueSummary = analytics.revenueSummary;\n    const planSummary = analytics.planSummary;\n    const subscriberData = analytics.subscriberData;\n    const churnRateData = analytics.churnRateData;\n    const revenueData = analytics.revenueData;\n    const transactionData = analytics.transactionData;\n    const planData = analytics.planData;\n    const conversionData = analytics.conversionData;\n\n    useEffect(() => {\n        fetchAnalytics();\n    }, [fetchAnalytics]);\n\n    return (\n        <div className={classes.box}>\n            <WorkspaceToolbar title=\"Analytics\" />\n            <div>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                    className={classes.title}\n                >\n                    Subscribers\n                </Typography>\n                <Grid container={true}>\n                    <Grid item={true} className={classes.item} xs={12} md={3}>\n                        <SubscriptionsSummary data={subscriptionSummary} />\n                    </Grid>\n                    <Grid item={true} className={classes.item} xs={12} md={9}>\n                        <SubscriberCharts\n                            subscriberData={subscriberData}\n                            churnRateData={churnRateData}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n            <div>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                    className={classes.title}\n                >\n                    Revenue\n                </Typography>\n                <Grid container={true} className={classes.container}>\n                    <Grid item={true} className={classes.item} xs={12} md={3}>\n                        <RevenueSummary data={revenueSummary} />\n                    </Grid>\n                    <Grid item={true} className={classes.item} xs={12} md={9}>\n                        <RevenueCharts\n                            revenueData={revenueData}\n                            transactionData={transactionData}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n            <div>\n                <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                    className={classes.title}\n                >\n                    Plans\n                </Typography>\n                <Grid container={true} className={classes.container}>\n                    <Grid item={true} className={classes.item} xs={12} md={3}>\n                        <PlanSummary data={planSummary} />\n                    </Grid>\n                    <Grid item={true} className={classes.item} xs={12} md={9}>\n                        <PlanCharts\n                            planData={planData}\n                            conversionData={conversionData}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nfunction mapStateToProps(props) {\n    return {\n        analytics: props.analytics,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchAnalytics: actions.fetchAnalytics,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Analytics);\n"],"sourceRoot":""}