{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/icons/GetApp.js","workspace/invoice/InvoiceCardTable.js","workspace/invoice/InvoiceCard.js","workspace/invoice/ViewInvoice.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Tablelvl2Context","React","Card","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","TableContext","tablelvl2","TableHead","Provider","role","display","TableRow","_props$hover","hover","_props$selected","head","footer","verticalAlign","outline","fade","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","table","isHeadCell","ariaSort","concat","capitalize","stickyHeader","typography","body2","borderBottom","divider","darken","textAlign","lineHeight","pxToRem","fontWeightMedium","body","fontSize","sizeSmall","width","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","top","left","zIndex","TableContainer","overflowX","Table","_props$padding","_props$size","_props$stickyHeader","borderCollapse","borderSpacing","captionSide","TableBody","useStyles","borderLeftWidth","borderLeftColor","grey","borderLeftStyle","borderRightWidth","borderRightColor","borderRightStyle","dateCell","InvoiceCardTable","rows","row","startDate","endDate","description","quantity","price","subtotal","maxWidth","invoice","close","error","edit","address","marginTop","payment","header","justifyContent","leftHeader","rightHeader","paymentValue","notes","notesTitle","notesText","terms","termsText","fields","render","invoiceNumber","postedOn","dueOn","paymentFields","total","paid","InvoiceCard","Typography","Grid","container","field","item","lg","items","key","amountDue","termsAndConditions","section","marginBottom","sectionTitle","subscriptions","progress","primaryActions","EditIcon","DownloadIcon","mapDispatchToProps","fetchInvoice","clearInvoice","editInvoice","connect","state","withRouter","useParams","useEffect","CircularProgress","invoiceCard"],"mappings":"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","file":"static/js/6.4337f130.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles({\n    table: {\n        width: \"100%\",\n        borderLeftWidth: 2,\n        borderLeftColor: grey[200],\n        borderLeftStyle: \"solid\",\n        borderRightWidth: 2,\n        borderRightColor: grey[200],\n        borderRightStyle: \"solid\",\n    },\n    head: {\n        backgroundColor: grey[200],\n    },\n    dateCell: {\n        width: 225,\n    },\n});\n\nexport default function InvoiceCardTable(props) {\n    const { rows } = props;\n    const classes = useStyles();\n\n    return (\n        <TableContainer elevation={0}>\n            <Table className={classes.table} size=\"small\">\n                <TableHead className={classes.head}>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell align=\"right\">Quantity</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                        <TableCell align=\"right\">Subtotal</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow>\n                            <TableCell className={classes.dateCell}>\n                                {row.startDate + \"—\" + row.endDate}\n                            </TableCell>\n                            <TableCell>{row.description}</TableCell>\n                            <TableCell align=\"right\">{row.quantity}</TableCell>\n                            <TableCell align=\"right\">{row.price} INR</TableCell>\n                            <TableCell align=\"right\">\n                                {row.subtotal} INR\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport InvoiceCardTable from \"./InvoiceCardTable\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 1200,\n        padding: 32,\n    },\n    invoice: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    title: {\n        fontWeight: 400,\n        fontSize: 14,\n    },\n    value: {\n        fontSize: 14,\n    },\n    icon: {\n        display: \"inline-block\",\n        marginRight: 4,\n    },\n    close: {\n        marginLeft: \"auto\",\n        color: theme.palette.error.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    edit: {\n        marginLeft: 8,\n        color: theme.palette.primary.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    address: {\n        marginTop: 16,\n    },\n    table: {\n        marginTop: 32,\n    },\n    payment: {\n        marginTop: 24,\n        width: \"20%\",\n        marginLeft: \"auto\",\n    },\n    header: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    leftHeader: {\n        width: \"40%\",\n    },\n    rightHeader: {\n        width: \"25%\",\n    },\n    paymentValue: {\n        textAlign: \"right\",\n        fontSize: 14,\n    },\n    notes: {\n        marginTop: 16,\n    },\n    notesTitle: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    notesText: {\n        fontSize: 14,\n    },\n    terms: {\n        marginTop: 16,\n    },\n    termsText: {\n        fontSize: 14,\n    },\n}));\n\nconst fields = [\n    {\n        identifier: \"invoiceNumber\",\n        title: \"Invoice Number\",\n        size: 12,\n        render: (props) => props.invoice.invoiceNumber,\n    },\n    {\n        identifier: \"invoiceDate\",\n        title: \"Invoice Date\",\n        size: 12,\n        render: (props) => props.invoice.postedOn,\n    },\n    {\n        identifier: \"dueDate\",\n        title: \"Due Date\",\n        size: 12,\n        render: (props) => props.invoice.dueOn,\n    },\n];\n\nconst paymentFields = [\n    {\n        identifier: \"subtotal\",\n        title: \"Subtotal\",\n        size: 12,\n        render: (props) => props.invoice.subtotal + \" INR\",\n    },\n    {\n        identifier: \"total\",\n        title: \"Total\",\n        size: 12,\n        render: (props) => props.invoice.total + \" INR\",\n    },\n    {\n        identifier: \"paid\",\n        title: \"Paid\",\n        size: 12,\n        render: (props) => props.invoice.paid + \" INR\",\n    },\n];\n\nfunction InvoiceCard(props) {\n    const classes = useStyles();\n    const { className, invoice } = props;\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardContent>\n                <div className={classes.header}>\n                    <div className={classes.leftHeader}>\n                        <div>\n                            <Typography\n                                variant=\"subtitle1\"\n                                color=\"textSecondary\"\n                                className={classes.title}\n                            >\n                                OneCube Software Solutions\n                            </Typography>\n                            TODO\n                            {/*\n                            {props.addressLine1}\n                            <br />\n                            {props.addressLine2 && (\n                                <React.Fragment>\n                                    {props.addressLine2}\n                                    <br />\n                                </React.Fragment>\n                            )}\n                            {props.city}\n                            <br />\n                            {props.state} {props.zipCode}\n                            <br />\n                            {props.country}\n                            */}\n                        </div>\n\n                        <div className={classes.address}>\n                            <Typography\n                                variant=\"subtitle1\"\n                                color=\"textSecondary\"\n                                className={classes.title}\n                            >\n                                Hubble Inc.\n                            </Typography>\n                            TODO\n                            {/*\n                            {props.addressLine1}\n                            <br />\n                            {props.addressLine2 && (\n                                <React.Fragment>\n                                    {props.addressLine2}\n                                    <br />\n                                </React.Fragment>\n                            )}\n                            {props.city}\n                            <br />\n                            {props.state} {props.zipCode}\n                            <br />\n                            {props.country}\n                            */}\n                        </div>\n                    </div>\n                    <div className={classes.rightHeader}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            className={classes.invoice}\n                        >\n                            Invoice\n                        </Typography>\n                        <Grid container={true} spacing={0}>\n                            {fields.map((field) => (\n                                <React.Fragment>\n                                    <Grid item={true} lg={6}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textSecondary\"\n                                            className={classes.title}\n                                        >\n                                            {field.title}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item={true} lg={6}>\n                                        <Typography\n                                            variant=\"subtitle1\"\n                                            color=\"textPrimary\"\n                                            className={classes.value}\n                                        >\n                                            {field.render(props)}\n                                        </Typography>\n                                    </Grid>\n                                </React.Fragment>\n                            ))}\n                        </Grid>\n                    </div>\n                </div>\n                <div className={classes.table}>\n                    <InvoiceCardTable rows={invoice.items} />\n                </div>\n                <Grid container={true} spacing={1} className={classes.payment}>\n                    {paymentFields.map((field) => (\n                        <React.Fragment key={field.identifier}>\n                            <Grid item={true} lg={6}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                    className={classes.title}\n                                >\n                                    {field.title}\n                                </Typography>\n                            </Grid>\n                            <Grid item={true} lg={6}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textPrimary\"\n                                    className={classes.paymentValue}\n                                >\n                                    {field.render(props)}\n                                </Typography>\n                            </Grid>\n                        </React.Fragment>\n                    ))}\n                    <Grid item={true} lg={12}>\n                        <hr />\n                    </Grid>\n                    <Grid item={true} lg={6}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            color=\"textSecondary\"\n                            className={classes.title}\n                        >\n                            Amount Due\n                        </Typography>\n                    </Grid>\n                    <Grid item={true} lg={6}>\n                        <Typography\n                            variant=\"subtitle1\"\n                            color=\"textPrimary\"\n                            className={classes.paymentValue}\n                        >\n                            {props.invoice.amountDue} INR\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <div className={classes.notes}>\n                    <Typography\n                        variant=\"subtitle1\"\n                        color=\"textSecondary\"\n                        className={classes.notesTitle}\n                    >\n                        Notes\n                    </Typography>\n                    <Typography className={classes.notesText}>\n                        {invoice.notes}\n                    </Typography>\n                </div>\n                <div className={classes.terms}>\n                    <Typography\n                        variant=\"subtitle1\"\n                        color=\"textSecondary\"\n                        className={classes.invoice}\n                    >\n                        Terms and Conditions\n                    </Typography>\n                    <Typography className={classes.termsText}>\n                        {invoice.termsAndConditions}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default InvoiceCard;\n","import React, { useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport InvoiceCard from \"./InvoiceCard\";\nimport * as actions from \"../../redux/actions\";\n\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    InvoiceCard: {\n        maxWidth: 600,\n    },\n    section: {\n        marginBottom: 32,\n    },\n    sectionTitle: {\n        fontSize: 20,\n        marginBottom: 16,\n        fontWeight: 500,\n    },\n    subscriptions: {},\n    progress: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\nconst primaryActions = [\n    {\n        identifier: \"edit\",\n        title: \"Edit\",\n        icon: EditIcon,\n        primary: true,\n    },\n    {\n        identifier: \"download\",\n        title: \"Download\",\n        icon: DownloadIcon,\n        primary: true,\n    },\n];\n\nfunction ViewInvoice(props) {\n    const classes = useStyles();\n    const { fetchInvoice, clearInvoice, invoice, editInvoice } = props;\n    const { identifier } = useParams();\n\n    const handleAction = (type) => {\n        if (type === \"edit\") {\n            editInvoice(invoice);\n        }\n    };\n\n    useEffect(() => {\n        fetchInvoice(identifier);\n        return clearInvoice;\n    }, [identifier, fetchInvoice, clearInvoice]);\n\n    return (\n        <div>\n            <WorkspaceToolbar\n                title=\"Invoice\"\n                actions={primaryActions}\n                onAction={handleAction}\n            />\n            {!invoice && (\n                <CircularProgress size=\"48px\" className={classes.progress} />\n            )}\n            {invoice && (\n                <div className={classes.container}>\n                    <InvoiceCard\n                        className={classes.invoiceCard}\n                        invoice={invoice}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        invoice: state.invoice,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchInvoice: actions.fetchInvoice,\n    clearInvoice: actions.clearInvoice,\n    editInvoice: actions.editInvoice,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewInvoice));\n"],"sourceRoot":""}