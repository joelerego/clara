{"version":3,"sources":["workspace/invoice/ViewInvoices.js"],"names":["useStyles","makeStyles","theme","container","padding","headers","identifier","numeric","disablePadding","label","filterFields","type","title","startTitle","startIdentifier","endTitle","endIdentifier","options","value","defaultValue","option","startDate","Date","endDate","actions1","icon","FilterIcon","primary","ListIcon","actions2","CompactIcon","statusNames","pending","processing","pastDue","paid","failed","voided","closed","mapDispatchToProps","fetchInvoices","actions","connect","state","invoices","withRouter","props","history","location","params","queryString","parse","search","Number","classes","useState","selected","setSelected","Object","keys","length","openFilter","setOpenFilter","compact","setCompact","defaultFilterValues","toFilterState","filterValues","setFilterValues","generateURL","values","flatValues","toURLParams","URLSearchParams","push","toString","useEffect","selectionCount","onAction","className","item","lg","onSelected","rows","onClick","invoice","renderCellValue","row","rowIndex","column","columnIndex","invoiceNumber","account","firstName","lastName","companyName","postedOn","status","total","fields","onValueChange","field","newValues","assign","onClear","defaultValues"],"mappings":"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","file":"static/js/20.81dccb1f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport WorkspaceTable from \"../common/WorkspaceTable\";\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport WorkspaceFilter from \"../common/WorkspaceFilter\";\nimport { toURLParams, toFilterState } from \"../common/WorkspaceFilter\";\nimport * as actions from \"../../redux/actions\";\n\nimport ListIcon from \"@material-ui/icons/ViewList\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport CompactIcon from \"@material-ui/icons/ViewCompact\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n}));\n\nconst headers = [\n    {\n        identifier: \"invoiceNumber\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Invoice Number\",\n    },\n    {\n        identifier: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Name\",\n    },\n    {\n        identifier: \"company\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Company\",\n    },\n    {\n        identifier: \"postedOn\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Posted On\",\n    },\n    {\n        identifier: \"status\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Status\",\n    },\n    {\n        identifier: \"total\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Total\",\n    },\n];\n\nconst filterFields = [\n    {\n        identifier: \"dateRange\",\n        type: \"time_range\",\n        title: \"Time Range\",\n        startTitle: \"Start Date\",\n        startIdentifier: \"startDate\",\n        endTitle: \"End Date\",\n        endIdentifier: \"endDate\",\n        options: [\n            {\n                value: \"all_time\",\n                title: \"All Time\",\n            },\n            {\n                value: \"last_3_months\",\n                title: \"Last 3 Months\",\n            },\n            {\n                value: \"last_6_months\",\n                title: \"Last 6 Months\",\n            },\n            {\n                value: \"last_9_months\",\n                title: \"Last 9 Months\",\n            },\n            {\n                value: \"last_12_months\",\n                title: \"Last 12 Months\",\n            },\n            {\n                value: \"last_15_months\",\n                title: \"Last 15 Months\",\n            },\n            {\n                value: \"last_18_months\",\n                title: \"Last 18 Months\",\n            },\n            {\n                value: \"custom\",\n                title: \"Custom\",\n            },\n        ],\n        defaultValue: {\n            option: \"all_time\",\n            startDate: new Date(),\n            endDate: new Date(),\n        },\n    },\n    {\n        identifier: \"invoiceStatus\",\n        type: \"select\",\n        title: \"Invoice Status\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"pending\",\n                title: \"Pending\",\n            },\n            {\n                value: \"processing\",\n                title: \"Processing\",\n            },\n            {\n                value: \"pastDue\",\n                title: \"Past Due\",\n            },\n            {\n                value: \"paid\",\n                title: \"Paid\",\n            },\n            {\n                value: \"failed\",\n                title: \"Failed\",\n            },\n            {\n                value: \"voided\",\n                title: \"Voided\",\n            },\n            {\n                value: \"closed\",\n                title: \"Closed\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n    {\n        identifier: \"collectionMethod\",\n        type: \"select\",\n        title: \"Collection Method\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"automatic\",\n                title: \"Automatic\",\n            },\n            {\n                value: \"manual\",\n                title: \"Manual\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n    {\n        identifier: \"origin\",\n        type: \"select\",\n        title: \"Origin\",\n        options: [\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n            {\n                value: \"purchase\",\n                title: \"Purchase\",\n            },\n            {\n                value: \"renewal\",\n                title: \"Renewal\",\n            },\n            {\n                value: \"immediateChange\",\n                title: \"Immediate Change\",\n            },\n            {\n                value: \"termination\",\n                title: \"Termination\",\n            },\n            {\n                value: \"refund\",\n                title: \"Refund\",\n            },\n            {\n                value: \"postedCredit\",\n                title: \"Posted Credit\",\n            },\n            {\n                value: \"giftCardRedemption\",\n                title: \"Gift Card Redemption\",\n            },\n            {\n                value: \"writeOff\",\n                title: \"Write Off\",\n            },\n            {\n                value: \"carryforwardCredit\",\n                title: \"Carryforward Credit\",\n            },\n            {\n                value: \"carryforwardGiftCredit\",\n                title: \"Carryforward Gift Credit\",\n            },\n            {\n                value: \"usageCorrection\",\n                title: \"Usage Correction\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n];\n\nconst actions1 = [\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"default\",\n        title: \"Default\",\n        icon: ListIcon,\n        primary: true,\n    },\n];\n\nconst actions2 = [\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"compact\",\n        title: \"Compact\",\n        icon: CompactIcon,\n        primary: true,\n    },\n];\n\nconst statusNames = {\n    pending: \"Pending\",\n    processing: \"Processing\",\n    pastDue: \"Past Due\",\n    paid: \"Paid\",\n    failed: \"Failed\",\n    voided: \"Voided\",\n    closed: \"Closed\",\n};\n\n/* [TODO]\n * 1. Filter logic\n */\nfunction ViewInvoices(props) {\n    const { invoices, fetchInvoices, history, location } = props;\n    const params = queryString.parse(location.search);\n\n    if (\"start_date\" in params) {\n        params[\"start_date\"] = new Date(Number(params[\"start_date\"]));\n    }\n    if (\"end_date\" in params) {\n        params[\"end_date\"] = new Date(Number(params[\"end_date\"]));\n    }\n\n    const classes = useStyles();\n    const [selected, setSelected] = useState([]);\n    const [openFilter, setOpenFilter] = useState(\n        Object.keys(params).length > 0\n    );\n    const [compact, setCompact] = useState(false);\n\n    // TODO: Should we cache this?\n    const defaultFilterValues = toFilterState(filterFields, params);\n    const [filterValues, setFilterValues] = useState(defaultFilterValues);\n\n    const handleAction = (type) => {\n        if (type === \"filter\") {\n            setOpenFilter(!openFilter);\n        } else if (type === \"compact\" || type === \"default\") {\n            setCompact(!compact);\n        }\n    };\n\n    const generateURL = (values) => {\n        if (values) {\n            const flatValues = toURLParams(filterFields, values);\n            const params = new URLSearchParams(flatValues);\n\n            history.push(\"/invoices?\" + params.toString());\n        } else {\n            history.push(\"/invoices\");\n        }\n    };\n\n    const onClick = (invoice) => {\n        history.push(\"/invoices/\" + invoice.identifier);\n    };\n\n    // TODO: Create a deep copy without serializing !\n    const onFilterValueChange = (field, value) => {\n        const newValues = Object.assign({}, filterValues);\n        newValues[field] = value;\n        setFilterValues(newValues);\n        generateURL(newValues);\n    };\n\n    const onFilterClear = () => {\n        const defaultValues = toFilterState(filterFields, {});\n        setFilterValues(defaultValues);\n        generateURL(null);\n    };\n\n    const renderCellValue = (row, rowIndex, column, columnIndex) => {\n        switch (column.identifier) {\n            case \"invoiceNumber\": {\n                return row.invoiceNumber;\n            }\n\n            case \"name\": {\n                return row.account.firstName + \" \" + row.account.lastName;\n            }\n\n            case \"company\": {\n                return row.account.companyName;\n            }\n\n            case \"postedOn\": {\n                return row.postedOn;\n            }\n\n            case \"status\": {\n                return statusNames[row.status];\n            }\n\n            case \"total\": {\n                return row.total + \" INR\";\n            }\n\n            default: {\n                return \"Unknown Column\";\n            }\n        }\n    };\n\n    useEffect(() => {\n        const flatValues = toURLParams(filterFields, filterValues);\n        fetchInvoices(flatValues);\n    }, [fetchInvoices, filterValues]);\n\n    return (\n        <div>\n            <WorkspaceToolbar\n                title=\"Invoices\"\n                selectionCount={selected.length}\n                actions={compact ? actions1 : actions2}\n                onAction={handleAction}\n            />\n            <Grid container={true} className={classes.container}>\n                <Grid item={true} lg={openFilter ? 10 : 12}>\n                    <WorkspaceTable\n                        headers={headers}\n                        onSelected={setSelected}\n                        rows={invoices}\n                        selected={selected}\n                        compact={compact}\n                        onClick={onClick}\n                        renderCellValue={renderCellValue}\n                    />\n                </Grid>\n                {openFilter && (\n                    <Grid item={true} lg={2}>\n                        <WorkspaceFilter\n                            fields={filterFields}\n                            values={filterValues}\n                            onValueChange={onFilterValueChange}\n                            onClear={onFilterClear}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        invoices: state.invoices,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchInvoices: actions.fetchInvoices,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewInvoices));\n"],"sourceRoot":""}