{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","workspace/plan/PlanCard.js","workspace/plan/ViewPlan.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Card","React","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","display","alignItems","CardHeader","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","content","flex","alignSelf","marginTop","createSvgIcon","Avatar","alt","childrenProp","children","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","userSelect","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","useStyles","green","close","error","edit","fields","render","createdOn","billingPeriod","billingPeriodUnit","pricePerBillingPeriod","setupFee","trialPeriod","trialPeriodUnit","term","termUnit","starts","renews","PlanCard","code","description","onEdit","substring","toUpperCase","subtitle","Grid","container","field","item","lg","Button","planCard","maxWidth","section","marginBottom","sectionTitle","progress","top","left","mapDispatchToProps","fetchPlan","clearPlan","editPlan","connect","state","plan","withRouter","useParams","useEffect","CircularProgress"],"mappings":"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","file":"static/js/9.53d3e3e4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    avatar: {\n        backgroundColor: green[500],\n    },\n    title: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    value: {\n        fontSize: 15,\n    },\n    icon: {\n        display: \"inline-block\",\n        marginRight: 4,\n    },\n    close: {\n        marginLeft: \"auto\",\n        color: theme.palette.error.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    edit: {\n        marginLeft: \"auto\",\n        color: theme.palette.primary.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n}));\n\nconst fields = [\n    {\n        identifier: \"createdOn\",\n        title: \"Created On\",\n        size: 6,\n        render: (props) => props.createdOn,\n    },\n    {\n        identifier: \"billingPeriod\",\n        title: \"Billing Period\",\n        size: 6,\n        render: (props) => props.billingPeriod + \" \" + props.billingPeriodUnit,\n    },\n    {\n        identifier: \"pricePerBillingPeriod\",\n        title: \"Price\",\n        size: 6,\n        render: (props) => props.pricePerBillingPeriod + \" INR\",\n    },\n    {\n        identifier: \"setupFee\",\n        title: \"Setup Fee\",\n        size: 6,\n        render: (props) => props.setupFee + \" INR\",\n    },\n    {\n        identifier: \"trialPeriod\",\n        title: \"Trial Period\",\n        size: 6,\n        render: (props) => props.trialPeriod + \" \" + props.trialPeriodUnit,\n    },\n    {\n        identifier: \"term\",\n        title: \"Term\",\n        size: 6,\n        render: (props) => props.term + \" \" + props.termUnit,\n    },\n    {\n        identifier: \"starts\",\n        title: \"Starts\",\n        size: 6,\n        render: (props) => props.starts,\n    },\n    {\n        identifier: \"renew\",\n        title: \"Renews\",\n        size: 6,\n        render: (props) => (props.renews ? \"Yes\" : \"No\"),\n    },\n];\n\nfunction PlanCard(props) {\n    const classes = useStyles();\n    const { className, name, code, description, onEdit } = props;\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.avatar}>\n                        {name.substring(0, 1).toUpperCase()}\n                    </Avatar>\n                }\n                title={name + \" (\" + code + \")\"}\n                subtitle={description}\n            />\n\n            <CardContent>\n                <Grid container={true} spacing={2}>\n                    {fields.map((field) => (\n                        <React.Fragment>\n                            <Grid item={true} lg={field.size}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                    className={classes.title}\n                                >\n                                    {field.title}\n                                </Typography>\n                                <Typography className={classes.value}>\n                                    {field.render(props)}\n                                </Typography>\n                            </Grid>\n                        </React.Fragment>\n                    ))}\n                </Grid>\n            </CardContent>\n\n            <CardActions>\n                <Button className={classes.edit} onClick={onEdit}>\n                    <EditIcon className={classes.icon} />\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default PlanCard;\n","import React, { useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport PlanCard from \"./PlanCard\";\nimport * as actions from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    planCard: {\n        maxWidth: 600,\n    },\n    section: {\n        marginBottom: 32,\n    },\n    sectionTitle: {\n        fontSize: 20,\n        marginBottom: 16,\n        fontWeight: 500,\n    },\n    progress: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\nfunction ViewPlan(props) {\n    const classes = useStyles();\n    const { plan, fetchPlan, clearPlan, editPlan } = props;\n    const { identifier } = useParams();\n\n    const handleEdit = () => {\n        editPlan(plan);\n    };\n\n    useEffect(() => {\n        fetchPlan(identifier);\n        return clearPlan;\n    }, [identifier, fetchPlan, clearPlan]);\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Plan\" />\n            {!plan && (\n                <CircularProgress size=\"48px\" className={classes.progress} />\n            )}\n            {plan && (\n                <div className={classes.container}>\n                    <div className={classes.section}>\n                        <Typography\n                            variant=\"h2\"\n                            className={classes.sectionTitle}\n                        >\n                            General\n                        </Typography>\n                        <PlanCard\n                            className={classes.planCard}\n                            onEdit={handleEdit}\n                            {...plan}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        plan: state.plan,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchPlan: actions.fetchPlan,\n    clearPlan: actions.clearPlan,\n    editPlan: actions.editPlan,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewPlan));\n"],"sourceRoot":""}