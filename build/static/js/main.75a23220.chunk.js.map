{"version":3,"sources":["layouts/AddDialog.js","layouts/MainToolbar.js","layouts/MainDrawer.js","workspace/configuration.js","error/configuration.js","routes.js","workspace/common/FormDrawer.js","workspace/account/AccountFormDrawer.js","workspace/account/EditAccount.js","workspace/subscription/SubscriptionFormDrawer.js","workspace/transaction/TransactionFormDrawer.js","workspace/plan/PlanFormDrawer.js","workspace/plan/EditPlan.js","workspace/invoice/InvoiceFormDrawer.js","workspace/invoice/EditInvoice.js","workspace/transaction/EditTransaction.js","layouts/MainLayout.js","layouts/index.js","common/PrimaryLayout.js","theme.js","App.js","serviceWorker.js","mock/index.js","redux/reducers.js","index.js","redux/actions.js","workspace/RecordForm.js","redux/actionTypes.js"],"names":["useStyles","makeStyles","theme","root","minHeight","minWidth","overflow","main","padding","groupTitle","fontSize","backgroundColor","paddingLeft","marginTop","marginBottom","textTransform","icon","display","marginLeft","marginRight","link","color","textDecoration","add","background","width","borderRadius","cursor","linkTitle","textAlign","groups","title","links","id","action","mapDispatchToProps","newAccount","newSubscription","newInvoice","newTransaction","newPlan","connect","props","classes","onClose","open","anchor","makeHandler","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","className","map","group","index","Grid","container","spacing","item","onClick","Icon","Typography","logoButton","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","palette","primary","appBarShift","enteringScreen","toolbar","hide","buttons","addButton","paddingRight","withRouter","toggleDrawer","drawerOpen","React","useState","addDialogAnchor","setAddDialogAnchor","AppBar","position","clsx","Toolbar","IconButton","edge","Button","src","alt","variant","size","event","currentTarget","Boolean","flexShrink","whiteSpace","drawerClose","overflowX","alignItems","justifyContent","mixins","navigationGroups","items","useTheme","handleCloseDrawer","Drawer","paper","direction","Divider","Fragment","key","List","ListItem","button","url","history","push","ListItemIcon","ListItemText","length","workspaceConfiguration","path","component","lazy","exact","errorConfiguration","routes","to","flexDirection","rootWide","navigation","paddingTop","paddingBottom","content","overflowY","scrollbarWidth","contentWide","wideDrawerWidth","actions","actionsWide","spring","flexGrow","FormDrawer","closeDialog","onSave","showMore","setShowMore","values","setValues","tabIndex","setTabIndex","elevation","groupIndex","identifier","selected","label","tabText","RecordForm","onValueChange","field","value","newValues","JSON","parse","stringify","Box","boxShadow","dialogAction","extraAction","defaultProps","account","children","type","required","readOnly","quickAdd","unique","hidden","tooltip","multipleValues","defaultValue","AccountFormDrawer","extractValues","onCancel","saveAccount","state","options","SubscriptionFormDrawer","rows","TransactionFormDrawer","transaction","PlanFormDrawer","plan","savePlan","InvoiceFormDrawer","invoice","saveInvoice","saveTransaction","Alert","easeOut","contentShift","progress","maxWidth","maxHeight","suspense","top","left","closeNotification","createAccount","createPlan","createSubscription","createTransaction","layouts","openDialog","notification","setDrawerOpen","handleCloseNotification","reason","fallback","CircularProgress","renderRoutes","category","Snackbar","autoHideDuration","SnackbarContent","message","severity","renderNotification","withStyles","default","text","Layout","createMuiTheme","breakpoints","keys","xs","sm","md","lg","xl","overrides","common","black","white","light","dark","contrastText","secondary","error","warning","info","success","grey","A100","A200","A400","A700","contrastThreshold","tonalOffset","disabled","hint","divider","level2","level1","active","hover","hoverOpacity","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","shadows","typography","htmlFontSize","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","fontWeight","lineHeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","shape","easeInOut","easeIn","shortest","shorter","short","standard","complex","mobileStepper","speedDial","modal","snackbar","nprogress","App","CssBaseline","ThemeProvider","window","location","hostname","match","mock","MockAdapter","axios","delayResponse","plans","accounts","subscriptions","transactions","invoices","analytics","growth","months","paymentMethods","periodUnits","invoiceStatuses","invoiceOrigins","collectionMethods","futureDate","faker","date","future","toISOString","pastDate","past","createInvoiceItems","limit","random","number","min","max","result","i","startDate","endDate","description","lorem","sentence","quantity","price","subtotal","amountDue","arrayElement","accountCopy","totalBillingCycles","remainingBillingCycles","subscription","uuid","quantityType","createdAt","updatedAt","trialStart","trialEnd","collectionMethod","billingPeriod","billingPeriodUnit","setupFee","trialPeriod","trialPeriodUnit","starts","term","termUnit","renew","createdOn","comments","paragraph","amount","tax","paymentMethod","refundable","boolean","name","commerce","productName","code","word","pricePerBillingPeriod","renews","userName","internet","firstName","lastName","emailAddress","email","phoneNumber","phone","addressLine1","address","streetAddress","addressLine2","secondaryAddress","city","country","zipCode","invoiceNumber","postedOn","dueOn","status","total","paid","origin","notes","lines","termsAndConditions","generateFakeData","onPost","reply","request","data","onGet","GET_PLAN_URL","exec","find","PUT_PLAN_URL","onPut","findIndex","GET_ACCOUNT_URL","PUT_ACCOUNT_URL","GET_SUBSCRIPTION_URL","PUT_SUBSCRIPTION_URL","GET_TRANSACTION_URL","PUT_TRANSACTION_URL","GET_INVOICE_URL","PUT_INVOICE_URL","subscriptionSummary","period","subscribers","subscribersChange","subscribersDelta","ltv","ltvChange","ltvDelta","churnRate","churnChange","churnDelta","revenueSummary","totalRevenue","totalRevenueChange","totalRevenueDelta","recoveredRevenue","recoveredRevenueChange","recoveredRevenueDelta","dueRevenue","dueRevenueChange","dueRevenueDelta","planSummary","conversions","conversionsChange","conversionsDelta","conversionRate","conversionRateChange","conversionRateDelta","cancellationRate","cancellationRateChange","cancellationRateDelta","subscriberData","month","createSubscriberData","churnRateData","createChurnRateData","revenueData","billedRevenue","revenuePastDue","createRevenueData","transactionData","pending","paymentFailed","noBillingInfo","cancelled","converted","createTransactionData","planData","goldPlan","silverPlan","bronzePlan","platinumPlan","createPlanData","conversionData","new","reactivated","churned","createConversionData","rootReducer","combineReducers","ActionTypes","payload","store","createStore","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","dispatch","showNotification","post","response","put","fetchAccountComplete","fetchAccount","get","fetchAccounts","params","Date","fetchAccountsComplete","editAccount","clearAccount","fetchSubscriptionComplete","fetchSubscription","fetchSubscriptions","fetchSubscriptionsComplete","clearSubscription","fetchInvoiceComplete","fetchInvoice","fetchInvoices","fetchInvoicesComplete","editInvoice","clearInvoice","fetchTransactionComplete","fetchTransaction","fetchTransactions","fetchTransactionsComplete","editTransaction","clearTransaction","fetchPlanComplete","fetchPlan","fetchPlans","fetchPlansComplete","editPlan","clearPlan","fetchAnalytics","fetchAnalyticsComplete","chips","flexWrap","chip","margin","forEach","option","makeChangeHandler","target","makeRangeHandler","newValue","Object","assign","makeDateChangeHandler","which","format","validateEmail","toLowerCase","test","getSelectedTitle","utils","DateFnsUtils","fieldIndex","fullWidth","onChange","multiline","inputVariant","control","labelId","startTitle","endTitle","renderSelect","multiple","renderValue","renderMultiSelect","helperText","NEW_ACCOUNT","FETCH_ACCOUNT_COMPLETE","FETCH_ACCOUNTS_COMPLETE","EDIT_ACCOUNT","CLEAR_ACCOUNT","NEW_SUBSCRIPTION","FETCH_SUBSCRIPTION_COMPLETE","FETCH_SUBSCRIPTIONS_COMPLETE","EDIT_SUBSCRIPTION","CLEAR_SUBSCRIPTION","NEW_INVOICE","FETCH_INVOICE_COMPLETE","FETCH_INVOICES_COMPLETE","EDIT_INVOICE","CLEAR_INVOICE","NEW_TRANSACTION","FETCH_TRANSACTION_COMPLETE","FETCH_TRANSACTIONS_COMPLETE","EDIT_TRANSACTION","CLEAR_TRANSACTION","NEW_PLAN","FETCH_PLAN_COMPLETE","FETCH_PLANS_COMPLETE","EDIT_PLAN","CLEAR_PLAN","FETCH_ANALYTICS_COMPLETE","CLOSE_DIALOG","SHOW_NOTIFICATION","CLOSE_NOTIFICATION"],"mappings":"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","file":"static/js/main.75a23220.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\n\nimport { connect } from \"react-redux\";\nimport {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n} from \"../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: 260,\n        minWidth: 400,\n        overflow: \"hidden\",\n    },\n    main: {\n        padding: 16,\n    },\n    groupTitle: {\n        fontSize: 12,\n        backgroundColor: \"#F0F0F0\",\n        padding: 8,\n        paddingLeft: 16,\n        marginTop: 0,\n        marginBottom: 0,\n        textTransform: \"uppercase\",\n    },\n    icon: {\n        display: \"block !important\",\n        marginLeft: \"auto !important\",\n        marginRight: \"auto !important\",\n    },\n    link: {\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    add: {\n        padding: 12,\n        \"&:hover\": {\n            background: \"#D3D3D3\",\n        },\n        width: 100,\n        borderRadius: 4,\n        cursor: \"pointer\",\n    },\n    linkTitle: {\n        marginTop: 4,\n        textAlign: \"center\",\n        fontSize: 12,\n    },\n}));\n\nconst groups = [\n    {\n        title: \"Record\",\n        links: [\n            {\n                id: \"account\",\n                title: \"Account\",\n                icon: \"account_circle\",\n                action: \"newAccount\",\n            },\n            {\n                id: \"subscription\",\n                title: \"Subscription\",\n                icon: \"autorenew\",\n                action: \"newSubscription\",\n            },\n            {\n                id: \"transaction\",\n                title: \"Transaction\",\n                icon: \"monetization_on\",\n                action: \"newTransaction\",\n            },\n        ],\n    },\n    {\n        title: \"Configuration\",\n        links: [\n            {\n                id: \"plan\",\n                title: \"Plan\",\n                icon: \"local_offer\",\n                action: \"newPlan\",\n            },\n        ],\n    },\n];\n\nfunction AddDialog(props) {\n    const classes = useStyles();\n    const { onClose, open, anchor } = props;\n    const makeHandler = (link) => () => {\n        onClose();\n        props[link.action]();\n    };\n\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchor}\n            onClose={onClose}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\",\n            }}\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"center\",\n            }}\n        >\n            <div className={classes.root}>\n                {groups.map((group, index) => (\n                    <div>\n                        <h6 className={classes.groupTitle}>{group.title}</h6>\n                        <Grid\n                            className={classes.main}\n                            container={true}\n                            spacing={0}\n                        >\n                            {group.links.map((link, index) => (\n                                <Grid item={true}>\n                                    <div\n                                        className={classes.add}\n                                        onClick={makeHandler(link)}\n                                    >\n                                        <Icon className={classes.icon}>\n                                            {link.icon}\n                                        </Icon>\n                                        <Typography\n                                            className={classes.linkTitle}\n                                        >\n                                            {link.title}\n                                        </Typography>\n                                    </div>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ))}\n            </div>\n        </Popover>\n    );\n}\n\nAddDialog.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool.isRequired,\n    selectedValue: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n    newAccount,\n    newSubscription,\n    newInvoice,\n    newTransaction,\n    newPlan,\n};\n\nexport default connect(null, mapDispatchToProps)(AddDialog);\n","import React from \"react\";\nimport {\n    AppBar,\n    Button,\n    Toolbar,\n    makeStyles,\n    IconButton,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport AddDialog from \"./AddDialog\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    logoButton: {\n        height: 64,\n        width: 180,\n        borderRadius: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    toolbar: {},\n    hide: {\n        display: \"none\",\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    addButton: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n}));\n\nfunction MainToolbar(props) {\n    const { toggleDrawer, drawerOpen } = props;\n    const classes = useStyles();\n    const [addDialogAnchor, setAddDialogAnchor] = React.useState(null);\n\n    const handleOpenAddDialog = (event) =>\n        setAddDialogAnchor(event.currentTarget);\n    const handleCloseAddDialog = () => setAddDialogAnchor(null);\n\n    return (\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: drawerOpen,\n            })}\n        >\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    onClick={toggleDrawer}\n                    edge=\"start\"\n                    className={{ [classes.hide]: drawerOpen }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Button className={classes.logoButton}>\n                    <img\n                        src=\"assets/images/hubble.png\"\n                        alt=\"Hubble logo\"\n                        height=\"40px\"\n                    />\n                </Button>\n                <div className={classes.buttons}>\n                    <Button\n                        className={classes.addButton}\n                        variant=\"text\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={handleOpenAddDialog}\n                    >\n                        <AddIcon />\n                        Quick Add\n                    </Button>\n                </div>\n\n                <AddDialog\n                    open={Boolean(addDialogAnchor)}\n                    onClose={handleCloseAddDialog}\n                    anchor={addDialogAnchor}\n                />\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default withRouter(MainToolbar);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport AccountsIcon from \"@material-ui/icons/AccountCircle\";\nimport PreferencesIcon from \"@material-ui/icons/Settings\";\nimport AnalyticsIcon from \"@material-ui/icons/BarChart\";\nimport TransactionsIcon from \"@material-ui/icons/MonetizationOn\";\nimport SubscriptionsIcon from \"@material-ui/icons/Autorenew\";\nimport IvoicesIcon from \"@material-ui/icons/Receipt\";\nimport PlansIcon from \"@material-ui/icons/LocalOffer\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: 60,\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}));\n\nconst navigationGroups = [\n    {\n        id: \"primary\",\n        items: [\n            {\n                id: \"accounts\",\n                title: \"Accounts\",\n                icon: <AccountsIcon />,\n                link: \"/accounts\",\n            },\n            {\n                id: \"subscriptions\",\n                title: \"Subscriptions\",\n                icon: <SubscriptionsIcon />,\n                link: \"/subscriptions\",\n            },\n            {\n                id: \"invoices\",\n                title: \"Invoices\",\n                icon: <IvoicesIcon />,\n                link: \"/invoices\",\n            },\n            {\n                id: \"transactions\",\n                title: \"Transactions\",\n                icon: <TransactionsIcon />,\n                link: \"/transactions\",\n            },\n        ],\n    },\n    {\n        id: \"dashboard\",\n        items: [\n            {\n                id: \"analytics\",\n                title: \"Analytics\",\n                icon: <AnalyticsIcon />,\n                link: \"/analytics\",\n            },\n        ],\n    },\n    {\n        id: \"configuration\",\n        items: [\n            {\n                id: \"plans\",\n                title: \"Plans\",\n                icon: <PlansIcon />,\n                link: \"/plans\",\n            },\n            {\n                id: \"preferences\",\n                title: \"Preferences\",\n                icon: <PreferencesIcon />,\n                link: \"/preferences\",\n            },\n        ],\n    },\n];\n\nfunction MainDrawer(props) {\n    const makeLinkHandler = (url) => () => props.history.push(url);\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const { open, handleCloseDrawer } = props;\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={handleCloseDrawer}>\n                    {theme.direction === \"rtl\" ? (\n                        <ChevronRightIcon />\n                    ) : (\n                        <ChevronLeftIcon />\n                    )}\n                </IconButton>\n            </div>\n            <Divider />\n            {navigationGroups.map((group, index) => (\n                <React.Fragment key={group.id}>\n                    <List>\n                        {group.items.map((item, index) => (\n                            <ListItem\n                                button\n                                key={item.id}\n                                onClick={makeLinkHandler(item.link)}\n                            >\n                                <ListItemIcon>{item.icon}</ListItemIcon>\n                                <ListItemText primary={item.title} />\n                            </ListItem>\n                        ))}\n                    </List>\n                    {index + 1 < navigationGroups.length && <Divider />}\n                </React.Fragment>\n            ))}\n        </Drawer>\n    );\n}\n\nexport default withRouter(MainDrawer);\n","import React from \"react\";\n\nconst workspaceConfiguration = [\n    // Account\n    {\n        path: \"/accounts/:identifier\",\n        component: React.lazy(() => import(\"./account/ViewAccount\")),\n    },\n    {\n        path: \"/accounts\",\n        component: React.lazy(() => import(\"./account/ViewAccounts\")),\n        exact: true,\n    },\n\n    // Invoice\n    {\n        path: \"/invoices/:identifier\",\n        component: React.lazy(() => import(\"./invoice/ViewInvoice\")),\n    },\n    {\n        path: \"/invoices\",\n        component: React.lazy(() => import(\"./invoice/ViewInvoices\")),\n        exact: true,\n    },\n\n    // Subscription\n    {\n        path: \"/subscriptions/:identifier\",\n        component: React.lazy(() => import(\"./subscription/ViewSubscription\")),\n    },\n    {\n        path: \"/subscriptions\",\n        component: React.lazy(() => import(\"./subscription/ViewSubscriptions\")),\n        exact: true,\n    },\n\n    // Transaction\n    {\n        path: \"/transactions/:identifier\",\n        component: React.lazy(() => import(\"./transaction/ViewTransaction\")),\n    },\n    {\n        path: \"/transactions\",\n        component: React.lazy(() => import(\"./transaction/ViewTransactions\")),\n        exact: true,\n    },\n\n    // Plan\n    {\n        path: \"/plans/:identifier\",\n        component: React.lazy(() => import(\"./plan/ViewPlan\")),\n    },\n    {\n        path: \"/plans\",\n        component: React.lazy(() => import(\"./plan/ViewPlans\")),\n        exact: true,\n    },\n\n    // Analytics\n    {\n        path: \"/analytics\",\n        component: React.lazy(() => import(\"./analytics/Analytics\")),\n        exact: true,\n    },\n    \n    // Preferences\n    {\n        path: \"/preferences\",\n        component: React.lazy(() => import(\"./preferences/Preferences\")),\n        exact: true,\n    },\n];\n\nexport default workspaceConfiguration;\n","import React from \"react\";\n\nconst errorConfiguration = [\n    {\n        path: \"/error/404\",\n        component: React.lazy(() => import(\"./Error404\")),\n    },\n    {\n        path: \"/error/500\",\n        component: React.lazy(() => import(\"./Error500\")),\n    },\n];\n\nexport default errorConfiguration;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport workspaceConfiguration from \"./workspace/configuration\";\nimport errorConfiguration from \"./error/configuration\";\n\nconst routes = [\n    ...workspaceConfiguration,\n    ...errorConfiguration,\n    {\n        path: \"/\",\n        exact: true,\n        component: () => <Redirect to=\"/analytics\" />,\n    },\n    {\n        component: () => <Redirect to=\"/error/404\" />,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport PropTypes from \"prop-types\";\n\nimport RecordForm from \"../RecordForm\";\nimport * as actions from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst rightDrawerWidth = 600;\nconst wideDrawerWidth = 1000;\nconst navigationWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: rightDrawerWidth,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    rootWide: {\n        width: wideDrawerWidth,\n    },\n    appBar: {},\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    title: {},\n    container: {\n        paddingLeft: 24,\n        paddingRight: 0,\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    navigation: {\n        width: navigationWidth,\n        height: \"calc(100vh - 128px)\",\n        paddingTop: 24,\n        paddingBottom: 24,\n        marginRight: 16,\n    },\n    content: {\n        paddingTop: 24,\n        paddingBottom: 24,\n        overflowY: \"auto\",\n        height: \"calc(100vh - 128px)\",\n        width: rightDrawerWidth,\n        scrollbarWidth: \"thin\",\n    },\n    contentWide: {\n        width: wideDrawerWidth - navigationWidth,\n    },\n    actions: {\n        width: rightDrawerWidth,\n        height: 64,\n        padding: 16,\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n    },\n    actionsWide: {\n        width: wideDrawerWidth,\n    },\n    spring: {\n        flexGrow: 1,\n    },\n}));\n\nfunction FormDrawer(props) {\n    const { closeDialog, title, groups, open, onSave } = props;\n    const classes = useStyles(props);\n    const [showMore, setShowMore] = React.useState(props.showMore);\n    const [values, setValues] = React.useState(props.values);\n    const [tabIndex, setTabIndex] = React.useState(0);\n    const handleShowMore = () => {\n        setShowMore(!showMore);\n    };\n    const handleSave = () => {\n        closeDialog();\n        onSave(values);\n    };\n    // TODO: Create a deep copy without serializing !\n    const handleValueChange = (field, value) => {\n        const newValues = JSON.parse(JSON.stringify(values));\n        newValues[field.identifier] = value;\n\n        setValues(newValues);\n    };\n\n    return (\n        <Drawer className={classes.drawer} anchor=\"right\" open={open}>\n            <div\n                className={\n                    showMore\n                        ? clsx(classes.root, classes.rootWide)\n                        : classes.root\n                }\n            >\n                <AppBar\n                    position=\"static\"\n                    elevation={1}\n                    className={classes.appBar}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Typography className={classes.title} variant=\"h6\">\n                            {title}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n\n                <div className={classes.container}>\n                    {showMore && (\n                        <List component=\"nav\" className={classes.navigation}>\n                            {groups.map((group, groupIndex) => (\n                                <ListItem\n                                    key={group.identifier}\n                                    button={true}\n                                    selected={tabIndex === groupIndex}\n                                    onClick={() => setTabIndex(groupIndex)}\n                                >\n                                    <ListItemText\n                                        primary={group.label}\n                                        className={classes.tabText}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n\n                    <div\n                        className={\n                            showMore\n                                ? clsx(classes.content, classes.contentWide)\n                                : classes.content\n                        }\n                    >\n                        <RecordForm\n                            groups={groups}\n                            values={values}\n                            onValueChange={handleValueChange}\n                            tabIndex={tabIndex}\n                            showMore={showMore}\n                        />\n                    </div>\n                </div>\n\n                <Box\n                    boxShadow={4}\n                    className={\n                        showMore\n                            ? clsx(classes.actions, classes.actionsWide)\n                            : classes.actions\n                    }\n                >\n                    <Button\n                        onClick={handleSave}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        onClick={closeDialog}\n                        color=\"primary\"\n                        className={classes.dialogAction}\n                    >\n                        Cancel\n                    </Button>\n                    <div className={classes.spring}></div>\n                    <Button\n                        size=\"small\"\n                        variant=\"text\"\n                        onClick={handleShowMore}\n                        color=\"secondary\"\n                        className={classes.extraAction}\n                    >\n                        <Icon>\n                            {showMore\n                                ? \"keyboard_arrow_right\"\n                                : \"keyboard_arrow_left\"}\n                        </Icon>\n                        {showMore ? \"Show Less\" : \"Show More\"}\n                    </Button>\n                </Box>\n            </div>\n        </Drawer>\n    );\n}\n\nFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n};\n\nconst mapDispatchToProps = {\n    closeDialog: actions.closeDialog,\n};\n\nexport default connect(null, mapDispatchToProps)(FormDrawer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, account\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"User Name\",\n                identifier: \"userName\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The user name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"First Name\",\n                identifier: \"firstName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Last Name\",\n                identifier: \"lastName\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The last name of the account.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Email Address\",\n                identifier: \"emailAddress\",\n                type: \"email_address\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The email address of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Phone Number\",\n                identifier: \"phoneNumber\",\n                type: \"phone_number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The phone number of the account.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 1\",\n                identifier: \"addressLine1\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Address Line 2\",\n                identifier: \"addressLine2\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The first line of address.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"City\",\n                identifier: \"city\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The city.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"State\",\n                identifier: \"state\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The state where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Country\",\n                identifier: \"country\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip: \"The country where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Zip Code\",\n                identifier: \"zipCode\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: false,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"The zip code of the location where the customer resides.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nfunction AccountFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nAccountFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nAccountFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default AccountFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport AccountFormDrawer from \"./AccountFormDrawer\";\n\nfunction EditAccount(props) {\n    const { account, saveAccount } = props;\n    return (\n        <AccountFormDrawer\n            title=\"Edit Account\"\n            showMore={true}\n            onSave={saveAccount}\n            account={account}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        account: state.account,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveAccount: actions.saveAccount,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAccount);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            /*{\n                identifier: \"date_range\",\n                type: \"date_range\",\n                title: \"Time Range\",\n                startTitle: \"Start Date\",\n                endTitle: \"End Date\",\n                options: [\n                    {\n                        value: \"all_time\",\n                        title: \"All Time\",\n                    },\n                    {\n                        value: \"last_3_months\",\n                        title: \"Last 3 Months\",\n                    },\n                    {\n                        value: \"last_6_months\",\n                        title: \"Last 6 Months\",\n                    },\n                    {\n                        value: \"last_9_months\",\n                        title: \"Last 9 Months\",\n                    },\n                    {\n                        value: \"last_12_months\",\n                        title: \"Last 12 Months\",\n                    },\n                    {\n                        value: \"last_15_months\",\n                        title: \"Last 15 Months\",\n                    },\n                    {\n                        value: \"last_18_months\",\n                        title: \"Last 18 Months\",\n                    },\n                    {\n                        value: \"custom\",\n                        title: \"Custom\",\n                    },\n                ],\n                quickAdd: true,\n                defaultValue: {\n                    option: \"all_time\",\n                    startDate: null,\n                    endDate: null,\n                },\n            }*/\n            {\n                label: \"Plan\",\n                identifier: \"plan\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The plan associated with the subscription.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Billing Period\",\n                identifier: \"billingPeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing period of the subscription.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Billing Period Unit\",\n                identifier: \"billingPeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The number of billing period units.\",\n                multipleValues: true,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Setup Fee\",\n                identifier: \"setupFee\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The fee required for setup of the subscription.\",\n                multipleValues: true,\n                defaultValue: 0,\n            },\n            {\n                label: \"Trial Period\",\n                identifier: \"trailPeriod\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The period of the trail subscription.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Trial Period Unit\",\n                identifier: \"trialPeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Number of units of trial period.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Starts\",\n                identifier: \"starts\",\n                type: \"date\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Start date of the subscription.\",\n                multipleValues: false,\n            },\n            {\n                label: \"Term\",\n                identifier: \"term\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Term of the subscription.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Term Unit\",\n                identifier: \"termUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Unit of the term.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Renew\",\n                identifier: \"renew\",\n                type: \"switch\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"Boolean value stating whether subscription is recurring.\",\n                multipleValues: false,\n                defaultValue: false,\n            },\n        ],\n    },\n];\n\nfunction SubscriptionFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.account || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nSubscriptionFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    account: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nSubscriptionFormDrawer.defaultProps = {\n    showMore: false,\n    account: null,\n    onCancel: null,\n};\n\nexport default SubscriptionFormDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            /*{\n                label: \"Subscription\",\n                identifier: \"subscription\",\n                type: \"text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The plan associated with a subscription.\",\n                multipleValues: true,\n                defaultValue: \"\",\n            },*/\n            {\n                label: \"Comments\",\n                identifier: \"comments\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Any comments on the transaction.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                rows: 4,\n            },\n            {\n                label: \"Amount\",\n                identifier: \"amount\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Amount of the transaction.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Tax\",\n                identifier: \"tax\",\n                type: \"number\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Tax of the transaction.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Action\",\n                identifier: \"action\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"purchase\",\n                        title: \"Purchase\",\n                    },\n                    {\n                        value: \"verify\",\n                        title: \"Verify\",\n                    },\n                    {\n                        value: \"refund\",\n                        title: \"Refund\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Action can be purchase, verify or refund.\",\n                multipleValues: false,\n                defaultValue: \"purchase\",\n            },\n            {\n                label: \"Payment Method\",\n                identifier: \"paymentMethod\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"cash\",\n                        title: \"Cash\",\n                    },\n                    {\n                        value: \"credit_card\",\n                        title: \"Credit Card\",\n                    },\n                    {\n                        value: \"debit_card\",\n                        title: \"Debit Card\",\n                    },\n                    {\n                        value: \"online\",\n                        title: \"Online / Netbanking\",\n                    },\n                ],\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"Method of Payment.\",\n                multipleValues: false,\n                defaultValue: \"cash\",\n            },\n            {\n                label: \"Refundable\",\n                identifier: \"refundable\",\n                type: \"switch\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The refund policy of the transaction.\",\n                multipleValues: false,\n                defaultValue: false,\n            },\n        ],\n    },\n];\n\nfunction TransactionFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.transaction || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nTransactionFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    transaction: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nTransactionFormDrawer.defaultProps = {\n    showMore: false,\n    transaction: null,\n    onCancel: null,\n};\n\nexport default TransactionFormDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Name\",\n                identifier: \"name\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The name of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Code\",\n                identifier: \"code\",\n                type: \"text\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The code of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Description\",\n                identifier: \"description\",\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The description of the plan.\",\n                multipleValues: false,\n                defaultValue: \"\",\n                rows: 4,\n            },\n            {\n                label: \"Billing Period\",\n                identifier: \"billingPeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing period of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Billing Period Unit\",\n                identifier: \"billingPeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Price Per Period\",\n                identifier: \"pricePerBillingPeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Setup Fee\",\n                identifier: \"setupFee\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The billing period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Trial Period\",\n                identifier: \"trialPeriod\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The trial period of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Trial Period Unit\",\n                identifier: \"trialPeriodUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The trial period unit of the plan.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Term\",\n                identifier: \"term\",\n                type: \"number\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The term of the plan.\",\n                multipleValues: false,\n                defaultValue: 0,\n            },\n            {\n                label: \"Term Unit\",\n                identifier: \"termUnit\",\n                type: \"select\",\n                options: [\n                    {\n                        value: \"days\",\n                        title: \"Days\",\n                    },\n                    {\n                        value: \"months\",\n                        title: \"Months\",\n                    },\n                ],\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The term unit of the plan.\",\n                multipleValues: false,\n                defaultValue: \"days\",\n            },\n            {\n                label: \"Renew\",\n                identifier: \"renew\",\n                type: \"switch\",\n                required: true,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip:\n                    \"Determines whether the subscription renews after the term.\",\n                multipleValues: false,\n                defaultValue: false,\n            },\n        ],\n    },\n];\n\nfunction PlanFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.plan || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nPlanFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    plan: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nPlanFormDrawer.defaultProps = {\n    showMore: false,\n    plan: null,\n    onCancel: null,\n};\n\nexport default PlanFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport PlanFormDrawer from \"./PlanFormDrawer\";\n\nfunction EditPlan(props) {\n    const { plan, savePlan } = props;\n    return (\n        <PlanFormDrawer\n            title=\"Edit Plan\"\n            showMore={true}\n            onSave={savePlan}\n            plan={plan}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        plan: state.plan,\n    };\n}\n\nconst mapDispatchToProps = {\n    savePlan: actions.savePlan,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPlan);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { extractValues } from \"../RecordForm\";\n\nimport FormDrawer from \"../common/FormDrawer\";\n\n// text, large_text, number, date_picker, date_range_picker, switch, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, invoice\n\n// Only top level children can have quickAdd. Groups cannot have required, unique, multipleValues, mininmumValues, maximumValues.\n// Groups can have readOnly, hidden, tooltip\n// The same person can work in multiple organizations. But such cases are rare. Therefore, the system should be kept\n// simple and not accomodate such cases. given, there are other work arounds.\n\n// The user name should be unique across your organization.\nconst groups = [\n    {\n        label: \"Basic\",\n        children: [\n            {\n                label: \"Notes\",\n                identifier: \"notes\",\n                type: \"large_text\",\n                rows: 4,\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The notes for the invoice.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n            {\n                label: \"Terms and Conditions\",\n                identifier: \"termsAndConditions\",\n                rows: 4,\n                type: \"large_text\",\n                required: false,\n                readOnly: false,\n                quickAdd: true,\n                unique: false,\n                hidden: false,\n                tooltip: \"The terms and conditions applied to the invoice.\",\n                multipleValues: false,\n                defaultValue: \"\",\n            },\n        ],\n    },\n];\n\nfunction InvoiceFormDrawer(props) {\n    const { title, onSave, showMore, open } = props;\n\n    const values = props.invoice || extractValues(groups);\n    return (\n        <FormDrawer\n            title={title}\n            showMore={showMore}\n            groups={groups}\n            values={values}\n            onSave={onSave}\n            open={open}\n        />\n    );\n}\n\nInvoiceFormDrawer.propTypes = {\n    title: PropTypes.string.isRequired,\n    showMore: PropTypes.bool,\n    invoice: PropTypes.object,\n    onSave: PropTypes.func.isRequired,\n};\n\nInvoiceFormDrawer.defaultProps = {\n    showMore: false,\n    invoice: null,\n    onCancel: null,\n};\n\nexport default InvoiceFormDrawer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport InvoiceFormDrawer from \"./InvoiceFormDrawer\";\n\nfunction EditInvoice(props) {\n    const { invoice, saveInvoice } = props;\n    return (\n        <InvoiceFormDrawer\n            title=\"Edit Invoice\"\n            showMore={true}\n            onSave={saveInvoice}\n            invoice={invoice}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        invoice: state.invoice,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveInvoice: actions.saveInvoice,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditInvoice);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../../redux/actions\";\nimport TransactionFormDrawer from \"./TransactionFormDrawer\";\n\nfunction EditTransaction(props) {\n    const { transaction, saveTransaction } = props;\n    return (\n        <TransactionFormDrawer\n            title=\"Edit Transaction\"\n            showMore={true}\n            onSave={saveTransaction}\n            transaction={transaction}\n            open={true}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        transaction: state.transaction,\n    };\n}\n\nconst mapDispatchToProps = {\n    saveTransaction: actions.saveTransaction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTransaction);\n","import React, { Suspense } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\n// TODO: Update this import when Material UI moves this to production.\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { renderRoutes } from \"react-router-config\";\nimport MainToolbar from \"./MainToolbar\";\nimport MainDrawer from \"./MainDrawer\";\nimport { connect } from \"react-redux\";\n\nimport routes from \"../routes\";\nimport AccountFormDrawer from \"../workspace/account/AccountFormDrawer\";\nimport EditAccount from \"../workspace/account/EditAccount\";\nimport SubscriptionFormDrawer from \"../workspace/subscription/SubscriptionFormDrawer\";\nimport TransactionFormDrawer from \"../workspace/transaction/TransactionFormDrawer\";\nimport PlanFormDrawer from \"../workspace/plan/PlanFormDrawer\";\nimport EditPlan from \"../workspace/plan/EditPlan\";\nimport EditInvoice from \"../workspace/invoice/EditInvoice\";\nimport EditTransaction from \"../workspace/transaction/EditTransaction\";\nimport * as actions from \"../redux/actions\";\n\nconst miniDrawerWidth = 60;\nconst drawerWidth = 240;\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: miniDrawerWidth,\n        marginTop: 64,\n    },\n    contentShift: {\n        marginLeft: drawerWidth,\n        marginTop: 64,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    progress: {\n        maxWidth: 24,\n        maxHeight: 24,\n        color: \"white\",\n    },\n    drawer: {\n        width: 50,\n    },\n    suspense: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n// TODO: The layouts should be configurable.\n// TODO: Show drawer instead of toolbar for smaller screens.\nfunction MainLayout(props) {\n    const {\n        openDialog,\n        notification,\n        closeNotification,\n        createAccount,\n        createSubscription,\n        createTransaction,\n        createPlan,\n    } = props;\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const classes = useStyles();\n\n    const toggleDrawer = () => {\n        setDrawerOpen(!drawerOpen);\n    };\n\n    const handleCloseNotification = (event, reason) => {\n        if (reason !== \"clickaway\") {\n            closeNotification();\n        }\n    };\n\n    const renderNotification = (notification) => {\n        if (notification) {\n            if (notification.category === \"LOADING\") {\n                return (\n                    <Snackbar\n                        open={true}\n                        autoHideDuration={6000}\n                        onClose={handleCloseNotification}\n                    >\n                        <SnackbarContent\n                            message={notification.message}\n                            action={\n                                <CircularProgress\n                                    className={classes.progress}\n                                />\n                            }\n                        />\n                    </Snackbar>\n                );\n            }\n            return (\n                <Snackbar\n                    open={true}\n                    autoHideDuration={6000}\n                    onClose={handleCloseNotification}\n                >\n                    <Alert severity=\"success\" onClose={handleCloseNotification}>\n                        {notification.message}\n                    </Alert>\n                </Snackbar>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <MainDrawer\n                    open={drawerOpen}\n                    handleCloseDrawer={toggleDrawer}\n                />\n                <MainToolbar\n                    drawerOpen={drawerOpen}\n                    toggleDrawer={toggleDrawer}\n                />\n\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: drawerOpen,\n                    })}\n                >\n                    <Suspense\n                        fallback={\n                            <CircularProgress\n                                size=\"48px\"\n                                className={classes.suspense}\n                            />\n                        }\n                    >\n                        {renderRoutes(routes)}\n                    </Suspense>\n                    {props.children}\n                </main>\n\n                {/* <MainFooter /> */}\n            </div>\n\n            <AccountFormDrawer\n                title=\"New Account\"\n                onSave={createAccount}\n                open={openDialog === \"NEW_ACCOUNT\"}\n            />\n            <SubscriptionFormDrawer\n                title=\"New Subscription\"\n                onSave={createSubscription}\n                open={openDialog === \"NEW_SUBSCRIPTION\"}\n            />\n            <TransactionFormDrawer\n                title=\"New Transaction\"\n                onSave={createTransaction}\n                open={openDialog === \"NEW_TRANSACTION\"}\n            />\n            <PlanFormDrawer\n                title=\"New Plan\"\n                onSave={createPlan}\n                open={openDialog === \"NEW_PLAN\"}\n            />\n\n            {openDialog === \"EDIT_INVOICE\" && <EditInvoice />}\n            {openDialog === \"EDIT_TRANSACTION\" && <EditTransaction />}\n            {openDialog === \"EDIT_ACCOUNT\" && <EditAccount />}\n            {openDialog === \"EDIT_PLAN\" && <EditPlan />}\n\n            {renderNotification(notification)}\n        </React.Fragment>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        openDialog: state.openDialog,\n        notification: state.notification,\n    };\n}\n\nconst mapDispatchToProps = {\n    closeNotification: actions.closeNotification,\n    createAccount: actions.createAccount,\n    createPlan: actions.createPlan,\n    createSubscription: actions.createSubscription,\n    createTransaction: actions.createTransaction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import MainLayout from \"./MainLayout\";\n\nconst layouts = {\n    main: MainLayout,\n};\n\nexport default layouts;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport layouts from \"../layouts\";\n\nconst styles = (theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n    },\n});\n\nfunction PrimaryLayout(props) {\n\tconst { classes } = props;\n\n    // const Layout = layouts[settings.layout.name];\n    const Layout = layouts[\"main\"];\n    return <Layout className={classes.root} {...props} />;\n}\n\nexport default withStyles(styles)(withRouter(PrimaryLayout));\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    breakpoints: {\n        keys: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"],\n        values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\n    },\n    direction: \"ltr\",\n    mixins: {\n        toolbar: {\n            minHeight: 56,\n            \"@media (min-width:0px) and (orientation: landscape)\": {\n                minHeight: 48,\n            },\n            \"@media (min-width:600px)\": { minHeight: 64 },\n        },\n    },\n    overrides: {},\n    palette: {\n        common: { black: \"#000\", white: \"#fff\" },\n        type: \"light\",\n        primary: {\n            main: \"#1976d2\",\n            light: \"rgb(71, 145, 219)\",\n            dark: \"rgb(17, 82, 147)\",\n            contrastText: \"#fff\",\n        },\n        secondary: {\n            main: \"rgb(220, 0, 78)\",\n            light: \"rgb(227, 51, 113)\",\n            dark: \"rgb(154, 0, 54)\",\n            contrastText: \"#fff\",\n        },\n        error: {\n            light: \"#e57373\",\n            main: \"#f44336\",\n            dark: \"#d32f2f\",\n            contrastText: \"#fff\",\n        },\n        warning: {\n            light: \"#ffb74d\",\n            main: \"#ff9800\",\n            dark: \"#f57c00\",\n            contrastText: \"rgba(0, 0, 0, 0.87)\",\n        },\n        info: {\n            light: \"#64b5f6\",\n            main: \"#2196f3\",\n            dark: \"#1976d2\",\n            contrastText: \"#fff\",\n        },\n        success: {\n            light: \"#81c784\",\n            main: \"#4caf50\",\n            dark: \"#388e3c\",\n            contrastText: \"rgba(0, 0, 0, 0.87)\",\n        },\n        grey: {\n            \"50\": \"#fafafa\",\n            \"100\": \"#f5f5f5\",\n            \"200\": \"#eeeeee\",\n            \"300\": \"#e0e0e0\",\n            \"400\": \"#bdbdbd\",\n            \"500\": \"#9e9e9e\",\n            \"600\": \"#757575\",\n            \"700\": \"#616161\",\n            \"800\": \"#424242\",\n            \"900\": \"#212121\",\n            A100: \"#d5d5d5\",\n            A200: \"#aaaaaa\",\n            A400: \"#303030\",\n            A700: \"#616161\",\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        text: {\n            primary: \"rgba(0, 0, 0, 0.87)\",\n            secondary: \"rgba(0, 0, 0, 0.54)\",\n            disabled: \"rgba(0, 0, 0, 0.38)\",\n            hint: \"rgba(0, 0, 0, 0.38)\",\n        },\n        divider: \"rgba(0, 0, 0, 0.12)\",\n        background: {\n            paper: \"#fff\",\n            default: \"#fff\",\n            level2: \"#f5f5f5\",\n            level1: \"#fff\",\n        },\n        action: {\n            active: \"rgba(0, 0, 0, 0.54)\",\n            hover: \"rgba(0, 0, 0, 0.04)\",\n            hoverOpacity: 0.04,\n            selected: \"rgba(0, 0, 0, 0.08)\",\n            selectedOpacity: 0.08,\n            disabled: \"rgba(0, 0, 0, 0.26)\",\n            disabledBackground: \"rgba(0, 0, 0, 0.12)\",\n            disabledOpacity: 0.38,\n            focus: \"rgba(0, 0, 0, 0.12)\",\n            focusOpacity: 0.12,\n            activatedOpacity: 0.12,\n        },\n    },\n    props: {},\n    shadows: [\n        \"none\",\n        \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n        \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n        \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n        \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n        \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n        \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n        \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n        \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n        \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n        \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n        \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n        \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n        \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n        \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n        \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n        \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\",\n    ],\n    typography: {\n        htmlFontSize: 16,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontSize: 14,\n        fontWeightLight: 300,\n        fontWeightRegular: 400,\n        fontWeightMedium: 500,\n        fontWeightBold: 700,\n        h1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"6rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"-0.01562em\",\n        },\n        h2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 300,\n            fontSize: \"3.75rem\",\n            lineHeight: 1.2,\n            letterSpacing: \"-0.00833em\",\n        },\n        h3: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"3rem\",\n            lineHeight: 1.167,\n            letterSpacing: \"0em\",\n        },\n        h4: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"2.125rem\",\n            lineHeight: 1.235,\n            letterSpacing: \"0.00735em\",\n        },\n        h5: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1.5rem\",\n            lineHeight: 1.334,\n            letterSpacing: \"0em\",\n        },\n        h6: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"1.25rem\",\n            lineHeight: 1.6,\n            letterSpacing: \"0.0075em\",\n        },\n        subtitle1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.00938em\",\n        },\n        subtitle2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.57,\n            letterSpacing: \"0.00714em\",\n        },\n        body1: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"1rem\",\n            lineHeight: 1.5,\n            letterSpacing: \"0.00938em\",\n        },\n        body2: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.43,\n            letterSpacing: \"0.01071em\",\n        },\n        button: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 500,\n            fontSize: \"0.875rem\",\n            lineHeight: 1.75,\n            letterSpacing: \"0.02857em\",\n            textTransform: \"none\",\n        },\n        caption: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 1.66,\n            letterSpacing: \"0.03333em\",\n        },\n        overline: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            fontWeight: 400,\n            fontSize: \"0.75rem\",\n            lineHeight: 2.66,\n            letterSpacing: \"0.08333em\",\n            textTransform: \"uppercase\",\n        },\n    },\n    shape: { borderRadius: 4 },\n    transitions: {\n        easing: {\n            easeInOut: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n            easeOut: \"cubic-bezier(0.0, 0, 0.2, 1)\",\n            easeIn: \"cubic-bezier(0.4, 0, 1, 1)\",\n            sharp: \"cubic-bezier(0.4, 0, 0.6, 1)\",\n        },\n        duration: {\n            shortest: 150,\n            shorter: 200,\n            short: 250,\n            standard: 300,\n            complex: 375,\n            enteringScreen: 225,\n            leavingScreen: 195,\n        },\n    },\n    zIndex: {\n        mobileStepper: 1000,\n        speedDial: 1050,\n        appBar: 1100,\n        drawer: 1200,\n        modal: 1300,\n        snackbar: 1400,\n        tooltip: 1500,\n    },\n    nprogress: { color: \"#000\" },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { PrimaryLayout } from \"./common\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport theme from \"./theme\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <BrowserRouter>\n                <ThemeProvider theme={theme}>\n                    <PrimaryLayout />\n                </ThemeProvider>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import faker from \"faker\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport axios from \"axios\";\n\nexport const mock = new MockAdapter(axios, { delayResponse: 0 });\n\nconst DEFAULT_PLANS = 10;\nconst DEFAULT_ACCOUNTS = 100;\nconst DEFAULT_SUBSCRIPTIONS = 100 * 5;\nconst DEFAULT_TRANSACTIONS = 100;\nconst DEFAULT_INVOICES = 100;\n\nexport const plans = [];\nexport const accounts = [];\nexport const subscriptions = [];\nexport const transactions = [];\nexport const invoices = [];\nexport const analytics = {};\n\nconst growth = [\"positive\", \"negative\"];\n\nconst months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n\nconst paymentMethods = [\"cash\", \"credit_card\", \"debit_card\", \"online\"];\n\nconst actions = [\"purchase\", \"verify\", \"refund\"];\n\nconst periodUnits = [\"days\", \"months\"];\n\nconst invoiceStatuses = [\n    \"pending\",\n    \"processing\",\n    \"pastDue\",\n    \"paid\",\n    \"failed\",\n    \"voided\",\n    \"closed\",\n];\n\nconst invoiceOrigins = [\n    \"all\",\n    \"purchase\",\n    \"renewal\",\n    \"immediateChange\",\n    \"termination\",\n    \"refund\",\n    \"postedCredit\",\n    \"giftCardRedemption\",\n    \"writeOff\",\n    \"carryforwardCredit\",\n    \"carryforwardGiftCredit\",\n    \"usageCorrection\",\n];\n\nconst collectionMethods = [\"automatic\", \"manual\"];\n\nfunction futureDate() {\n    return faker.date.future().toISOString();\n}\n\nfunction pastDate() {\n    return faker.date.past().toISOString();\n}\n\nfunction soonDate() {\n    return faker.date.future().toISOString();\n}\n\n// TODO: We could improve periods generated to be more realistic for months.\nfunction createPlan() {\n    const plan = {\n        identifier: faker.random.uuid(),\n        name: faker.commerce.productName(),\n        code: faker.lorem.word(),\n        description: faker.lorem.paragraph(),\n        billingPeriod: faker.random.number({\n            min: 0,\n            max: 6 * 30,\n        }),\n        billingPeriodUnit: faker.random.arrayElement(periodUnits),\n        pricePerBillingPeriod: faker.random.number(),\n        setupFee: faker.random.number(),\n        trialPeriod: faker.random.number({\n            min: 0,\n            max: 6 * 30,\n        }),\n        trialPeriodUnit: faker.random.arrayElement(periodUnits),\n        starts: soonDate(),\n        term: faker.random.number({\n            min: 0,\n            max: 6 * 30,\n        }),\n        termUnit: faker.random.arrayElement(periodUnits),\n        renews: faker.random.boolean(),\n        createdOn: pastDate(),\n    };\n    return plan;\n}\n\nfunction createAccount() {\n    const account = {\n        identifier: faker.random.uuid(),\n        userName: faker.internet.userName(),\n        firstName: faker.name.firstName(),\n        lastName: faker.name.lastName(),\n        emailAddress: faker.internet.email(),\n        phoneNumber: faker.phone.phoneNumber(),\n        addressLine1: faker.address.streetAddress(),\n        addressLine2: faker.address.secondaryAddress(),\n        city: faker.address.city(),\n        state: faker.address.state(),\n        country: faker.address.country(),\n        zipCode: faker.address.zipCode(),\n        subscriptions: [],\n        createdOn: pastDate(),\n    };\n    return account;\n}\n\nfunction createInvoiceItems() {\n    const limit = faker.random.number({\n        min: 1,\n        max: 10,\n    });\n    const result = [];\n    for (let i = 0; i < limit; i++) {\n        const item = {\n            startDate: pastDate(),\n            endDate: pastDate(),\n            description: faker.lorem.sentence(),\n            quantity: faker.random.number(),\n            price: faker.random.number(),\n            subtotal: faker.random.number(),\n            amountDue: faker.random.number(),\n        };\n        result.push(item);\n    }\n    return result;\n}\n\nfunction createInvoice() {\n    const invoice = {\n        identifier: faker.random.uuid(),\n        invoiceNumber: faker.random.number({\n            min: 1000,\n        }),\n        postedOn: pastDate(),\n        dueOn: futureDate(),\n        account: faker.random.arrayElement(accounts),\n        status: faker.random.arrayElement(invoiceStatuses),\n        total: faker.random.number(),\n        subtotal: faker.random.number(),\n        paid: faker.random.number(),\n        amountDue: faker.random.number(),\n        origin: faker.random.arrayElement(invoiceOrigins),\n        subscription: faker.random.arrayElement(subscriptions),\n        notes: faker.lorem.lines(),\n        termsAndConditions: faker.lorem.paragraph(),\n        items: createInvoiceItems(),\n    };\n    return invoice;\n}\n\n/* Subscriptions can have different values from the plans they are associated with.\n * In other words, a plan is a template from which we create a subscription. However,\n * when we generate a fake subscription here, we do not change the values. In the\n * future, we may want to introduce this behavior.\n *\n * Technically, Hubble does not allow an account to hold multiple subscriptions to\n * the same plan. We do not enforce such complex behavior here.\n */\nfunction createSubscription() {\n    const plan = faker.random.arrayElement(plans);\n    const account = faker.random.arrayElement(accounts);\n    const accountCopy = { ...account };\n    delete accountCopy.subscriptions;\n\n    const totalBillingCycles = faker.random.number({\n        min: 0,\n        max: 60,\n    });\n    const remainingBillingCycles = faker.random.number({\n        min: 0,\n        max: 60,\n    });\n    const subscription = {\n        identifier: faker.random.uuid(),\n        plan: plan,\n        account: accountCopy,\n        quantity: faker.random.number({\n            min: 0,\n            max: 100,\n        }),\n        quantityType: \"integer\",\n        createdAt: pastDate(),\n        updatedAt: pastDate(),\n        totalBillingCycles: totalBillingCycles,\n        remainingBillingCycles: remainingBillingCycles,\n        trialStart: futureDate(),\n        trialEnd: futureDate(),\n        collectionMethod: faker.random.arrayElement(collectionMethods),\n        billingPeriod: plan.billingPeriod,\n        billingPeriodUnit: plan.billingPeriodUnit,\n        setupFee: plan.setupFee,\n        trialPeriod: plan.trialPeriod,\n        trialPeriodUnit: plan.trialPeriodUnit,\n        starts: plan.starts,\n        term: plan.term,\n        termUnit: plan.termUnit,\n        renew: plan.renew,\n        createdOn: pastDate(),\n    };\n\n    account.subscriptions.push(subscription);\n\n    return subscription;\n}\n\nfunction createTransaction() {\n    const subscription = faker.random.arrayElement(subscriptions);\n\n    const transaction = {\n        identifier: faker.random.uuid(),\n        subscription: subscription,\n        comments: faker.lorem.paragraph(),\n        amount: faker.random.number(),\n        tax: faker.random.number(),\n        action: faker.random.arrayElement(actions),\n        paymentMethod: faker.random.arrayElement(paymentMethods),\n        refundable: faker.random.boolean(),\n        createdOn: pastDate(),\n    };\n\n    return transaction;\n}\n\nfunction generateFakeData() {\n    for (let i = 0; i < DEFAULT_PLANS; i++) {\n        const plan = createPlan();\n        plans.push(plan);\n    }\n\n    for (let i = 0; i < DEFAULT_ACCOUNTS; i++) {\n        const account = createAccount();\n        accounts.push(account);\n    }\n\n    for (let i = 0; i < DEFAULT_SUBSCRIPTIONS; i++) {\n        const subscription = createSubscription();\n        subscriptions.push(subscription);\n    }\n\n    for (let i = 0; i < DEFAULT_TRANSACTIONS; i++) {\n        const transaction = createTransaction();\n        transactions.push(transaction);\n    }\n\n    for (let i = 0; i < DEFAULT_INVOICES; i++) {\n        const invoice = createInvoice();\n        invoices.push(invoice);\n    }\n}\n\ngenerateFakeData();\n\n// Plans\n\nmock.onPost(\"/api/v1/plans\").reply((request) => {\n    const plan = JSON.parse(request.data);\n    plan.id = faker.random.uuid();\n    plans.push(plan);\n\n    return [200, plan];\n});\n\n// TODO: Paging\nmock.onGet(\"/api/v1/plans\").reply((request) => {\n    return [200, plans];\n});\n\nconst GET_PLAN_URL = /\\/api\\/v1\\/plans\\/([a-zA-Z0-9-]+)/;\nmock.onGet(GET_PLAN_URL).reply((request) => {\n    const identifier = GET_PLAN_URL.exec(request.url)[1];\n    const plan = plans.find((plan) => plan.identifier === identifier);\n    if (plan) {\n        return [200, plan];\n    } else {\n        return [404];\n    }\n});\n\n/* NOTE: The user can easily modify the identifier of a record.\n * However, the backend does not permit such operations.\n */\nconst PUT_PLAN_URL = /\\/api\\/v1\\/plans\\/([a-zA-Z0-9-]+)/;\nmock.onPut(PUT_PLAN_URL).reply((request) => {\n    const newPlan = JSON.parse(request.data);\n    const identifier = PUT_PLAN_URL.exec(request.url)[1];\n    const index = plans.findIndex((plan) => {\n        return plan.identifier === identifier;\n    });\n\n    if (index >= 0) {\n        plans[index] = newPlan;\n        return [200, newPlan];\n    } else {\n        return [404];\n    }\n});\n\n// Accounts\n\nmock.onPost(\"/api/v1/accounts\").reply((request) => {\n    const account = JSON.parse(request.data);\n    account.id = faker.random.uuid();\n    accounts.push(account);\n\n    return [200, account];\n});\n\n// TODO: Paging\nmock.onGet(\"/api/v1/accounts\").reply((request) => {\n    return [200, accounts];\n});\n\nconst GET_ACCOUNT_URL = /\\/api\\/v1\\/accounts\\/([a-zA-Z0-9-]+)/;\nmock.onGet(GET_ACCOUNT_URL).reply((request) => {\n    const identifier = GET_ACCOUNT_URL.exec(request.url)[1];\n    let account = accounts.find((account) => {\n        return account.identifier === identifier;\n    });\n\n    if (account) {\n        // TODO: Solve the recursive problem.\n        delete account.subscriptions;\n        return [200, account];\n    } else {\n        return [404];\n    }\n});\n\n/* NOTE: The user can easily modify the identifier of a record.\n * However, the backend does not permit such operations.\n */\nconst PUT_ACCOUNT_URL = /\\/api\\/v1\\/accounts\\/([a-zA-Z0-9-]+)/;\nmock.onPut(PUT_ACCOUNT_URL).reply((request) => {\n    const newAccount = JSON.parse(request.data);\n    const identifier = PUT_ACCOUNT_URL.exec(request.url)[1];\n    const index = accounts.findIndex((account) => {\n        return account.identifier === identifier;\n    });\n\n    if (index >= 0) {\n        accounts[index] = newAccount;\n        return [200, newAccount];\n    } else {\n        return [404];\n    }\n});\n\n// Subscriptions\n\nmock.onPost(\"/api/v1/subscriptions\").reply((request) => {\n    const subscription = JSON.parse(request.data);\n    subscription.id = faker.random.uuid();\n    subscriptions.push(subscription);\n\n    return [200, subscription];\n});\n\n// TODO: Paging\nmock.onGet(\"/api/v1/subscriptions\").reply((request) => {\n    return [200, subscriptions];\n});\n\nconst GET_SUBSCRIPTION_URL = /\\/api\\/v1\\/subscriptions\\/([a-zA-Z0-9-]+)/;\nmock.onGet(GET_SUBSCRIPTION_URL).reply((request) => {\n    const identifier = GET_SUBSCRIPTION_URL.exec(request.url)[1];\n    const subscription = subscriptions.find(\n        (subscription) => subscription.identifier === identifier\n    );\n    if (subscription) {\n        delete subscription.account;\n        return [200, subscription];\n    } else {\n        return [404];\n    }\n});\n\n/* NOTE: The user can easily modify the identifier of a record.\n * However, the backend does not permit such operations.\n */\nconst PUT_SUBSCRIPTION_URL = /\\/api\\/v1\\/subscriptions\\/([a-zA-Z0-9-]+)/;\nmock.onPut(PUT_SUBSCRIPTION_URL).reply((request) => {\n    const newSubscription = JSON.parse(request.data);\n    const identifier = PUT_SUBSCRIPTION_URL.exec(request.url)[1];\n    const index = subscriptions.findIndex((subscription) => {\n        return subscription.identifier === identifier;\n    });\n\n    if (index >= 0) {\n        subscriptions[index] = newSubscription;\n        return [200, newSubscription];\n    } else {\n        return [404];\n    }\n});\n\n// Transactions\n\nmock.onPost(\"/api/v1/transactions\").reply((request) => {\n    const transaction = JSON.parse(request.data);\n    transaction.id = faker.random.uuid();\n    transactions.push(transaction);\n\n    return [200, transaction];\n});\n\n// TODO: Paging\nmock.onGet(\"/api/v1/transactions\").reply((request) => {\n    return [200, transactions];\n});\n\nconst GET_TRANSACTION_URL = /\\/api\\/v1\\/transactions\\/([a-zA-Z0-9-]+)/;\nmock.onGet(GET_TRANSACTION_URL).reply((request) => {\n    const identifier = GET_TRANSACTION_URL.exec(request.url)[1];\n    const transaction = transactions.find(\n        (transaction) => transaction.identifier === identifier\n    );\n    if (transaction) {\n        return [200, transaction];\n    } else {\n        return [404];\n    }\n});\n\nconst PUT_TRANSACTION_URL = /\\/api\\/v1\\/transactions\\/([a-zA-Z0-9-]+)/;\nmock.onPut(PUT_TRANSACTION_URL).reply((request) => {\n    const newTransaction = JSON.parse(request.data);\n    const identifier = PUT_TRANSACTION_URL.exec(request.url)[1];\n    const index = transactions.findIndex((transaction) => {\n        return transaction.identifier === identifier;\n    });\n\n    if (index >= 0) {\n        transactions[index] = newTransaction;\n        return [200, newTransaction];\n    } else {\n        return [404];\n    }\n});\n\n// Invoice\n\nmock.onPost(\"/api/v1/invoices\").reply((request) => {\n    const invoice = JSON.parse(request.data);\n    invoice.id = faker.random.uuid();\n    invoice.push(invoice);\n\n    return [200, invoice];\n});\n\n// TODO: Paging\nmock.onGet(\"/api/v1/invoices\").reply((request) => {\n    return [200, invoices];\n});\n\nconst GET_INVOICE_URL = /\\/api\\/v1\\/invoices\\/([a-zA-Z0-9-]+)/;\nmock.onGet(GET_INVOICE_URL).reply((request) => {\n    const identifier = GET_INVOICE_URL.exec(request.url)[1];\n    const invoice = invoices.find(\n        (invoice) => invoice.identifier === identifier\n    );\n    if (invoice) {\n        return [200, invoice];\n    } else {\n        return [404];\n    }\n});\n\n/* NOTE: The user can easily modify the identifier of a record.\n * However, the backend does not permit such operations.\n */\nconst PUT_INVOICE_URL = /\\/api\\/v1\\/invoices\\/([a-zA-Z0-9-]+)/;\nmock.onPut(PUT_INVOICE_URL).reply((request) => {\n    const newInvoice = JSON.parse(request.data);\n    const identifier = PUT_INVOICE_URL.exec(request.url)[1];\n    const index = invoices.findIndex((invoice) => {\n        return invoice.identifier === identifier;\n    });\n\n    if (index >= 0) {\n        invoices[index] = newInvoice;\n        return [200, newInvoice];\n    } else {\n        return [404];\n    }\n});\n\n// Analytics Data\n\nfunction createSubscriptionSummary() {\n    const subscriptionSummary = {\n        period: \"Last 30 days\",\n        subscribers: faker.random.number({ min: 10, max: 99 }),\n        subscribersChange: faker.random.number({\n            min: 1,\n            max: 10,\n        }),\n        subscribersDelta: faker.random.arrayElement(growth),\n        ltv: faker.random.number({ min: 10, max: 99 }),\n        ltvChange: faker.random.number({ min: 10, max: 99 }),\n        ltvDelta: faker.random.arrayElement(growth),\n        churnRate: faker.random.number({ min: 10, max: 99 }),\n        churnChange: faker.random.number({ min: 10, max: 99 }),\n        churnDelta: faker.random.arrayElement(growth),\n    };\n    return subscriptionSummary;\n}\n\nfunction createRevenueSummary() {\n    const revenueSummary = {\n        period: \"Last 30 days\",\n        totalRevenue: faker.random.number({ min: 10, max: 99 }),\n        totalRevenueChange: faker.random.number({\n            min: 1000,\n            max: 9999,\n        }),\n        totalRevenueDelta: faker.random.arrayElement(growth),\n        recoveredRevenue: faker.random.number({ min: 10, max: 99 }),\n        recoveredRevenueChange: faker.random.number({\n            min: 1000,\n            max: 9999,\n        }),\n        recoveredRevenueDelta: faker.random.arrayElement(growth),\n        dueRevenue: faker.random.number({ min: 1000, max: 9999 }),\n        dueRevenueChange: faker.random.number({ min: 10, max: 99 }),\n        dueRevenueDelta: faker.random.arrayElement(growth),\n    };\n    return revenueSummary;\n}\n\nfunction createPlanSummary() {\n    const planSummary = {\n        period: \"Last 30 days\",\n        conversions: faker.random.number({ min: 10, max: 99 }),\n        conversionsChange: faker.random.number({\n            min: 1,\n            max: 10,\n        }),\n        conversionsDelta: faker.random.arrayElement(growth),\n        conversionRate: faker.random.number({ min: 10, max: 99 }),\n        conversionRateChange: faker.random.number({\n            min: 10,\n            max: 99,\n        }),\n        conversionRateDelta: faker.random.arrayElement(growth),\n        cancellationRate: faker.random.number({ min: 10, max: 99 }),\n        cancellationRateChange: faker.random.number({\n            min: 10,\n            max: 99,\n        }),\n        cancellationRateDelta: faker.random.arrayElement(growth),\n    };\n    return planSummary;\n}\n\nfunction createSubscriberData() {\n    const subscriberData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {};\n        item.month = months[i];\n        item.subscribers = faker.random.number({ min: 10, max: 99 });\n        subscriberData.push(item);\n    }\n    return subscriberData;\n}\n\nfunction createChurnRateData() {\n    const churnRateData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {};\n        item.month = months[i];\n        item.churnRate = faker.random.number({ min: 1, max: 10 });\n        churnRateData.push(item);\n    }\n    return churnRateData;\n}\n\nfunction createRevenueData() {\n    const revenueData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {\n            month: months[i],\n            billedRevenue: faker.random.number({ min: 10, max: 99 }),\n            revenuePastDue: faker.random.number({ min: 10, max: 99 }),\n        };\n        revenueData.push(item);\n    }\n    return revenueData;\n}\n\nfunction createTransactionData() {\n    const transactionData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {\n            month: months[i],\n            pending: faker.random.number({ min: 10, max: 99 }),\n            paymentFailed: faker.random.number({ min: 10, max: 99 }),\n            noBillingInfo: faker.random.number({ min: 10, max: 99 }),\n            cancelled: faker.random.number({ min: 10, max: 99 }),\n            converted: faker.random.number({ min: 10, max: 99 }),\n        };\n        transactionData.push(item);\n    }\n    return transactionData;\n}\n\nfunction createPlanData() {\n    const planData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {\n            month: months[i],\n            goldPlan: faker.random.number({ min: 10, max: 99 }),\n            silverPlan: faker.random.number({ min: 10, max: 99 }),\n            bronzePlan: faker.random.number({ min: 10, max: 99 }),\n            platinumPlan: faker.random.number({ min: 10, max: 99 }),\n        };\n        planData.push(item);\n    }\n    return planData;\n}\n\nfunction createConversionData() {\n    const conversionData = [];\n    for (let i = 0; i < months.length; i++) {\n        const item = {\n            month: months[i],\n            new: faker.random.number({ min: 10, max: 99 }),\n            reactivated: faker.random.number({ min: 10, max: 99 }),\n            churned: faker.random.number({ min: 10, max: 99 }),\n        };\n        conversionData.push(item);\n    }\n    return conversionData;\n}\n\nfunction generateAnalyticsFakeData() {\n    analytics.subscriptionSummary = createSubscriptionSummary();\n    analytics.revenueSummary = createRevenueSummary();\n    analytics.planSummary = createPlanSummary();\n    analytics.subscriberData = createSubscriberData();\n    analytics.churnRateData = createChurnRateData();\n    analytics.revenueData = createRevenueData();\n    analytics.transactionData = createTransactionData();\n    analytics.planData = createPlanData();\n    analytics.conversionData = createConversionData();\n}\n\ngenerateAnalyticsFakeData();\n\nmock.onGet(\"/api/v1/analytics\").reply((request) => {\n    return [200, analytics];\n});\n","import { combineReducers } from \"redux\";\nimport * as ActionTypes from \"./actionTypes\";\n\nfunction dialogReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.NEW_ACCOUNT:\n        case ActionTypes.NEW_SUBSCRIPTION:\n        case ActionTypes.NEW_INVOICE:\n        case ActionTypes.NEW_TRANSACTION:\n        case ActionTypes.NEW_PLAN:\n        case ActionTypes.EDIT_ACCOUNT:\n        case ActionTypes.EDIT_TRANSACTION:\n        case ActionTypes.EDIT_PLAN:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.type;\n        }\n\n        case ActionTypes.CLOSE_DIALOG: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction notificationReducer(state = null, action) {\n    if (action.type === \"SHOW_NOTIFICATION\") {\n        return {\n            message: action.payload.message,\n            category: action.payload.category,\n        };\n    } else if (action.type === \"CLOSE_NOTIFICATION\") {\n        return null;\n    }\n    return state;\n}\n\nfunction analyticsReducer(\n    state = {\n        subscriptionSummary: {},\n        revenueSummary: {},\n        planSummary: {},\n        subscriberData: [],\n        churnRateData: [],\n        revenueData: [],\n        transactionData: [],\n        planData: [],\n        conversionData: [],\n    },\n    action\n) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ANALYTICS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountsReducer(state = [], action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNTS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction accountReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_ACCOUNT_COMPLETE:\n        case ActionTypes.EDIT_ACCOUNT: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionsReducer(state = [], action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction subscriptionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_SUBSCRIPTION_COMPLETE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_SUBSCRIPTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoicesReducer(state = [], action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICES_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction invoiceReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_INVOICE_COMPLETE:\n        case ActionTypes.EDIT_INVOICE: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_INVOICE: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionsReducer(state = [], action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTIONS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction transactionReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_TRANSACTION_COMPLETE:\n        case ActionTypes.EDIT_TRANSACTION: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_TRANSACTION: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction plansReducer(state = [], action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLANS_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction planReducer(state = null, action) {\n    switch (action.type) {\n        case ActionTypes.FETCH_PLAN_COMPLETE:\n        case ActionTypes.EDIT_PLAN: {\n            return action.payload;\n        }\n\n        case ActionTypes.CLEAR_ACCOUNT: {\n            return null;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nconst rootReducer = combineReducers({\n    openDialog: dialogReducer,\n    notification: notificationReducer,\n    analytics: analyticsReducer,\n    accounts: accountsReducer,\n    account: accountReducer,\n    subscriptions: subscriptionsReducer,\n    subscription: subscriptionReducer,\n    transactions: transactionsReducer,\n    transaction: transactionReducer,\n    plans: plansReducer,\n    plan: planReducer,\n    invoices: invoicesReducer,\n    invoice: invoiceReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport \"./mock\";\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk), composeWithDevTools())\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as ActionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\n/* ACCOUNT\n *  1. newAccount()\n *  2. createAccount()\n *  3. saveAccount()\n *  4. fetchAccountComplete()\n *  5. fetchAccount()\n *  6. fetchAccountsComplete()\n *  7. fetchAccounts()\n *  8. editAccount()\n *  9. clearAccount()\n */\n\nexport function newAccount() {\n    return {\n        type: ActionTypes.NEW_ACCOUNT,\n        payload: null,\n    };\n}\n\n// TODO: Error boundaries\nexport function createAccount(account) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n        return axios.post(\"/api/v1/accounts\", account).then((response) => {\n            // const account = response.data;\n            dispatch(\n                showNotification(\"Successfully created account\", \"SUCCESS\")\n            );\n        });\n    };\n}\n\nexport function saveAccount(account) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving account...\", \"LOADING\"));\n        return axios\n            .put(\"/api/v1/accounts/\" + account.identifier, account)\n            .then((response) => {\n                const account = response.data;\n                dispatch(fetchAccountComplete(account));\n                dispatch(\n                    showNotification(\"Successfully saved account\", \"SUCCESS\")\n                );\n            });\n    };\n}\n\nexport function fetchAccountComplete(account) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNT_COMPLETE,\n        payload: account,\n    };\n}\n\nexport function fetchAccount(identifier) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading account...', 'LOADING'));\n        return axios.get(\"/api/v1/accounts/\" + identifier).then((response) => {\n            const account = response.data;\n            dispatch(fetchAccountComplete(account));\n        });\n    };\n}\n\nexport function fetchAccountsComplete(accounts) {\n    return {\n        type: ActionTypes.FETCH_ACCOUNTS_COMPLETE,\n        payload: accounts,\n    };\n}\n\nexport function fetchAccounts(params) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading accounts...', 'LOADING'));\n        return axios.get(\"/api/v1/accounts\", { params }).then((response) => {\n            const accounts = response.data;\n            for (let i = 0; i < accounts.length; i++) {\n                const account = accounts[i];\n                account.createdOn = new Date(account.createdOn);\n            }\n            dispatch(fetchAccountsComplete(accounts));\n        });\n    };\n}\n\nexport function editAccount(account) {\n    return {\n        type: ActionTypes.EDIT_ACCOUNT,\n        payload: account,\n    };\n}\n\nexport function clearAccount() {\n    return {\n        type: ActionTypes.CLEAR_ACCOUNT,\n        payload: null,\n    };\n}\n\n/* SUBSCRIPTION\n *  1. newSubscription()\n *  2. createSubscription()\n *  3. saveSubscription() -> TODO\n *  4. fetchSubscriptionComplete()\n *  5. fetchSubscription()\n *  6. fetchSubscriptionsComplete()\n *  7. fetchSubscriptions()\n *  8. editSubscription() -> TODO\n *  9. clearSubscription()\n */\n\nexport function newSubscription() {\n    return {\n        type: ActionTypes.NEW_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\nexport function createSubscription(subscription) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n        return axios\n            .post(\"/api/v1/subscriptions\", subscription)\n            .then((response) => {\n                // const newSubscription = response.data;\n                dispatch(\n                    showNotification(\n                        \"Successfully created subscription\",\n                        \"SUCCESS\"\n                    )\n                );\n            });\n    };\n}\n\nexport function saveSubscription(subscription) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving subscription...\", \"LOADING\"));\n        return axios\n            .put(\n                \"/api/v1/subscriptions/\" + subscription.identifier,\n                subscription\n            )\n            .then((response) => {\n                const subscription = response.data;\n                dispatch(fetchSubscriptionComplete(subscription));\n                dispatch(\n                    showNotification(\n                        \"Successfully saved subscription\",\n                        \"SUCCESS\"\n                    )\n                );\n            });\n    };\n}\n\nexport function fetchSubscriptionComplete(subscription) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTION_COMPLETE,\n        payload: subscription,\n    };\n}\n\nexport function fetchSubscription(identifier) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading subscription...', 'LOADING'));\n        return axios\n            .get(\"/api/v1/subscriptions/\" + identifier)\n            .then((response) => {\n                const subscription = response.data;\n                dispatch(fetchSubscriptionComplete(subscription));\n            });\n    };\n}\n\nexport function fetchSubscriptionsComplete(subscriptions) {\n    return {\n        type: ActionTypes.FETCH_SUBSCRIPTIONS_COMPLETE,\n        payload: subscriptions,\n    };\n}\n\nexport function fetchSubscriptions(params) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading subscriptions...', 'LOADING'));\n        return axios\n            .get(\"/api/v1/subscriptions\", { params })\n            .then((response) => {\n                const subscriptions = response.data;\n                for (let i = 0; i < subscriptions.length; i++) {\n                    const subscription = subscriptions[i];\n                    subscription.createdOn = new Date(subscription.createdOn);\n                }\n                dispatch(fetchSubscriptionsComplete(subscriptions));\n            });\n    };\n}\n\nexport function editSubscription(subscription) {\n    return {\n        type: ActionTypes.EDIT_SUBSCRIPTION,\n        payload: subscription,\n    };\n}\n\nexport function clearSubscription() {\n    return {\n        type: ActionTypes.CLEAR_SUBSCRIPTION,\n        payload: null,\n    };\n}\n\n/* INVOICE\n *  1. newInvoice()\n *  2. createInvoice() -> TODO\n *  3. saveInvoice()\n *  4. fetchInvoiceComplete()\n *  5. fetchInvoice()\n *  6. fetchInvoicesComplete()\n *  7. fetchInvoices()\n *  8. editInvoice()\n *  9. clearInvoice()\n */\n\nexport function newInvoice() {\n    return {\n        type: ActionTypes.NEW_INVOICE,\n        payload: null,\n    };\n}\n\nexport function saveInvoice(invoice) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving invoice...\", \"LOADING\"));\n        return axios\n            .put(\"/api/v1/invoices/\" + invoice.identifier, invoice)\n            .then((response) => {\n                const invoice = response.data;\n                dispatch(fetchInvoiceComplete(invoice));\n                dispatch(\n                    showNotification(\"Successfully saved invoice\", \"SUCCESS\")\n                );\n            });\n    };\n}\n\nexport function fetchInvoiceComplete(invoice) {\n    return {\n        type: ActionTypes.FETCH_INVOICE_COMPLETE,\n        payload: invoice,\n    };\n}\n\nexport function fetchInvoice(identifier) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading invoice...', 'LOADING'));\n        return axios.get(\"/api/v1/invoices/\" + identifier).then((response) => {\n            const invoice = response.data;\n            dispatch(fetchInvoiceComplete(invoice));\n        });\n    };\n}\n\nexport function fetchInvoicesComplete(invoices) {\n    return {\n        type: ActionTypes.FETCH_INVOICES_COMPLETE,\n        payload: invoices,\n    };\n}\n\nexport function fetchInvoices(params) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading invoices...', 'LOADING'));\n        return axios.get(\"/api/v1/invoices\", { params }).then((response) => {\n            const invoices = response.data;\n            for (let i = 0; i < invoices.length; i++) {\n                const invoice = invoices[i];\n                invoice.createdOn = new Date(invoice.createdOn);\n            }\n            dispatch(fetchInvoicesComplete(invoices));\n        });\n    };\n}\n\nexport function editInvoice(invoice) {\n    return {\n        type: ActionTypes.EDIT_INVOICE,\n        payload: invoice,\n    };\n}\n\nexport function clearInvoice() {\n    return {\n        type: ActionTypes.CLEAR_INVOICE,\n        payload: null,\n    };\n}\n\n/* TRANSACTION\n *  1. newTransaction()\n *  2. createTransaction()\n *  3. saveTransaction()\n *  4. fetchTransactionComplete()\n *  5. fetchTransaction()\n *  6. fetchTransactionsComplete()\n *  7. fetchTransactions()\n *  8. editTransaction()\n *  9. clearTransaction()\n */\n\nexport function newTransaction() {\n    return {\n        type: ActionTypes.NEW_TRANSACTION,\n        payload: null,\n    };\n}\n\nexport function createTransaction(transaction) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n        return axios\n            .post(\"/api/v1/transactions\", transaction)\n            .then((response) => {\n                // const newPlan = response.data;\n                dispatch(\n                    showNotification(\n                        \"Successfully created transaction\",\n                        \"SUCCESS\"\n                    )\n                );\n            });\n    };\n}\n\nexport function saveTransaction(transaction) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving transaction...\", \"LOADING\"));\n        return axios\n            .put(\"/api/v1/transactions/\" + transaction.identifier, transaction)\n            .then((response) => {\n                const transaction = response.data;\n                dispatch(fetchTransactionComplete(transaction));\n                dispatch(\n                    showNotification(\n                        \"Successfully saved transaction\",\n                        \"SUCCESS\"\n                    )\n                );\n            });\n    };\n}\n\nexport function fetchTransactionComplete(transaction) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTION_COMPLETE,\n        payload: transaction,\n    };\n}\n\nexport function fetchTransaction(identifier) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading transaction...', 'LOADING'));\n        return axios\n            .get(\"/api/v1/transactions/\" + identifier)\n            .then((response) => {\n                const transaction = response.data;\n                dispatch(fetchTransactionComplete(transaction));\n            });\n    };\n}\n\nexport function fetchTransactionsComplete(transactions) {\n    return {\n        type: ActionTypes.FETCH_TRANSACTIONS_COMPLETE,\n        payload: transactions,\n    };\n}\n\nexport function fetchTransactions(params) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading transactions...', 'LOADING'));\n        return axios\n            .get(\"/api/v1/transactions\", { params })\n            .then((response) => {\n                const transactions = response.data;\n                for (let i = 0; i < transactions.length; i++) {\n                    const transaction = transactions[i];\n                    transaction.createdOn = new Date(transaction.createdOn);\n                }\n                dispatch(fetchTransactionsComplete(transactions));\n            });\n    };\n}\n\nexport function editTransaction(transaction) {\n    return {\n        type: ActionTypes.EDIT_TRANSACTION,\n        payload: transaction,\n    };\n}\n\nexport function clearTransaction() {\n    return {\n        type: ActionTypes.CLEAR_TRANSACTION,\n        payload: null,\n    };\n}\n\n/* PLAN\n *  1. newPlan()\n *  2. createPlan()\n *  3. savePlan()\n *  4. fetchPlanComplete()\n *  5. fetchPlan()\n *  6. fetchPlansComplete()\n *  7. fetchPlans()\n *  8. editPlan()\n *  9. clearPlan()\n */\n\nexport function newPlan() {\n    return {\n        type: ActionTypes.NEW_PLAN,\n        payload: null,\n    };\n}\n\nexport function createPlan(plan) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n        return axios.post(\"/api/v1/plans\", plan).then((response) => {\n            // const newPlan = response.data;\n            dispatch(showNotification(\"Successfully created plan\", \"SUCCESS\"));\n        });\n    };\n}\n\nexport function savePlan(plan) {\n    return (dispatch) => {\n        dispatch(showNotification(\"Saving plan...\", \"LOADING\"));\n        return axios\n            .put(\"/api/v1/plans/\" + plan.identifier, plan)\n            .then((response) => {\n                const plan = response.data;\n                dispatch(fetchPlanComplete(plan));\n                dispatch(\n                    showNotification(\"Successfully saved plan\", \"SUCCESS\")\n                );\n            });\n    };\n}\n\nexport function fetchPlanComplete(plan) {\n    return {\n        type: ActionTypes.FETCH_PLAN_COMPLETE,\n        payload: plan,\n    };\n}\n\nexport function fetchPlan(identifier) {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading plan...', 'LOADING'));\n        return axios.get(\"/api/v1/plans/\" + identifier).then((response) => {\n            const plan = response.data;\n            dispatch(fetchPlanComplete(plan));\n        });\n    };\n}\n\nexport function fetchPlansComplete(plans) {\n    return {\n        type: ActionTypes.FETCH_PLANS_COMPLETE,\n        payload: plans,\n    };\n}\n\nexport function fetchPlans() {\n    return (dispatch) => {\n        // dispatch(showNotification('Loading plans...', 'LOADING'));\n        return axios.get(\"/api/v1/plans\").then((response) => {\n            const plans = response.data;\n            dispatch(fetchPlansComplete(plans));\n        });\n    };\n}\n\nexport function editPlan(plan) {\n    return {\n        type: ActionTypes.EDIT_PLAN,\n        payload: plan,\n    };\n}\n\nexport function clearPlan() {\n    return {\n        type: ActionTypes.CLEAR_PLAN,\n        payload: null,\n    };\n}\n\n/* Analytics\n */\n\nexport function fetchAnalyticsComplete(analytics) {\n    return {\n        type: ActionTypes.FETCH_ANALYTICS_COMPLETE,\n        payload: analytics,\n    };\n}\n\nexport function fetchAnalytics(params) {\n    return (dispatch) => {\n        return axios.get(\"/api/v1/analytics\", { params }).then((response) => {\n            const analytics = response.data;\n            dispatch(fetchAnalyticsComplete(analytics));\n        });\n    };\n}\n\n/* MISC\n * 1. closeDialog\n * 2. showNotification\n * 3. closeNotification\n */\n\nexport function closeDialog() {\n    return {\n        type: ActionTypes.CLOSE_DIALOG,\n        payload: null,\n    };\n}\n\nexport function showNotification(message, category) {\n    return {\n        type: ActionTypes.SHOW_NOTIFICATION,\n        payload: {\n            message,\n            category,\n        },\n    };\n}\n\nexport function closeNotification() {\n    return {\n        type: ActionTypes.CLOSE_NOTIFICATION,\n        payload: null,\n    };\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { format } from \"date-fns\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    extraAction: {\n        textTransform: \"none\",\n    },\n    tabText: {\n        fontWeight: 600,\n        fontSize: 13,\n    },\n    chips: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n    },\n    chip: {\n        margin: 2,\n    },\n    field: {\n        marginTop: 20,\n    },\n}));\n\n// date_range_picker, phone_number, email_address\n// multiple_options (multiselect), single_option (drop down)\n// lookup - organization, user, contact\n\n/* The form configuration is basically an array of groups. Each group consists two attributes - `label`,\n * which is rendered on the left when you click `Shore More`, and `children` which is an array of objects\n * that describe fields. Whatever attribute is in the field configuration is accessible as\n * `field.attributeName` in `RecordForm`.\n */\n\nexport function extractValues(groups) {\n    const result = {};\n    groups.forEach((group) => {\n        group.children.forEach((field) => {\n            if (field.type === \"date_range\") {\n                result[field.identifier] = {\n                    option: field.defaultValue.option,\n                    startDate: field.defaultValue.startDate,\n                    endDate: field.defaultValue.endDate,\n                };\n            } else if (field.type === \"multi_select\") {\n                result[field.identifier] = [...field.defaultValue];\n            } else {\n                result[field.identifier] = field.defaultValue;\n            }\n        });\n    });\n    return result;\n}\n\nexport default function RecordForm(props) {\n    const { values, groups, showMore, onValueChange, tabIndex } = props;\n    const classes = useStyles(props);\n\n    const makeChangeHandler = (field) => (event) => {\n        onValueChange(field, event.target.value);\n    };\n\n    const makeRangeHandler = (field) => (event) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        newValue.option = event.target.value;\n        onValueChange(field, newValue);\n    };\n\n    const makeDateChangeHandler = (field, which) => (date) => {\n        const newValue = Object.assign({}, values[field.identifier]);\n        // ISO format\n        newValue[which] = format(date, \"yyyy/MM/dd\");\n        onValueChange(field, newValue);\n    };\n\n    const validateEmail = (field) => {\n        const value = values[field.identifier].toLowerCase();\n        // eslint-disable-next-line\n        const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return !value || pattern.test(value);\n    };\n\n    const validatePhoneNumber = (field) => {\n        // eslint-disable-next-line\n        // const pattern = /^([+]?\\d{1,2}[.-\\s]?)?(\\d{3}[.-]?){2}\\d{4}$/;\n        return true;\n    };\n\n    const renderSelect = (field) => (\n        <FormControl variant=\"outlined\" fullWidth={true} size=\"medium\">\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    const getSelectedTitle = (field, selected) => {\n        return field.options.find((option) => option.value === selected).title;\n    };\n\n    const renderMultiSelect = (field) => (\n        <FormControl variant=\"outlined\" fullWidth={true} size=\"medium\">\n            <InputLabel id={field.identifier}>{field.label}</InputLabel>\n            <Select\n                labelId={field.identifier}\n                value={values[field.identifier]}\n                multiple={true}\n                onChange={makeChangeHandler(field)}\n                label={field.label}\n                renderValue={(selected) => (\n                    <div>\n                        {selected.map((value) => (\n                            <Chip\n                                value={selected}\n                                label={getSelectedTitle(field, value)}\n                            />\n                        ))}\n                    </div>\n                )}\n            >\n                {field.options.map((option) => (\n                    <MenuItem value={option.value}>{option.title}</MenuItem>\n                ))}\n            </Select>\n        </FormControl>\n    );\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container={true} className={classes.root}>\n                {groups.map((group, groupIndex) =>\n                    group.children.map((field, fieldIndex) =>\n                        (!showMore && field.quickAdd) ||\n                        (showMore && groupIndex === tabIndex) ? (\n                            <Grid\n                                key={field.identifier}\n                                item={true}\n                                lg={12}\n                                className={classes.field}\n                            >\n                                {field.type === \"text\" && (\n                                    <TextField\n                                        label={field.label}\n                                        id={field.identifier}\n                                        name={field.identifier}\n                                        type=\"text\"\n                                        variant=\"outlined\"\n                                        fullWidth={true}\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"password\" && (\n                                    <TextField\n                                        label={field.label}\n                                        id={field.identifier}\n                                        name={field.identifier}\n                                        type=\"password\"\n                                        variant=\"outlined\"\n                                        fullWidth={true}\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"large_text\" && (\n                                    <TextField\n                                        id={field.identifier}\n                                        label={field.label}\n                                        name={field.identifier}\n                                        type=\"text\"\n                                        multiline={true}\n                                        rows={field.rows || 4}\n                                        fullWidth={true}\n                                        variant=\"outlined\"\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"number\" && (\n                                    <TextField\n                                        id={field.identifier}\n                                        label={field.label}\n                                        name={field.identifier}\n                                        type=\"number\"\n                                        fullWidth={true}\n                                        variant=\"outlined\"\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"date\" && (\n                                    <KeyboardDatePicker\n                                        id={field.identifier}\n                                        label={field.label}\n                                        name={field.identifier}\n                                        format=\"MM/dd/yyyy\"\n                                        fullWidth={true}\n                                        inputVariant=\"outlined\"\n                                        required={field.required}\n                                        value={\n                                            !values[field.identifier]\n                                                ? new Date()\n                                                : new Date(\n                                                      values[field.identifier]\n                                                  )\n                                        }\n                                        margin=\"normal\"\n                                        onChange={makeDateChangeHandler(\n                                            field,\n                                            \"startDate\"\n                                        )}\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"switch\" && (\n                                    <FormGroup>\n                                        <FormControlLabel\n                                            id={field.identifier}\n                                            label={field.label}\n                                            name={field.identifier}\n                                            control={<Switch color=\"primary\" />}\n                                            required={field.required}\n                                            value={values[field.identifier]}\n                                            onChange={makeChangeHandler(field)}\n                                        />\n                                    </FormGroup>\n                                )}\n\n                                {field.type === \"date_range\" && (\n                                    <div>\n                                        <FormControl\n                                            variant=\"outlined\"\n                                            fullWidth={true}\n                                            size=\"medium\"\n                                        >\n                                            <InputLabel id={field.identifier}>\n                                                {field.title}\n                                            </InputLabel>\n                                            <Select\n                                                labelId={field.identifier}\n                                                value={\n                                                    values[field.identifier]\n                                                        .option\n                                                }\n                                                onChange={makeRangeHandler(\n                                                    field\n                                                )}\n                                                label={field.title}\n                                            >\n                                                {field.options.map((option) => (\n                                                    <MenuItem\n                                                        value={option.value}\n                                                    >\n                                                        {option.title}\n                                                    </MenuItem>\n                                                ))}\n                                            </Select>\n                                        </FormControl>\n                                        {values[field.identifier].option ===\n                                            \"custom\" && (\n                                            <React.Fragment>\n                                                <KeyboardDatePicker\n                                                    margin=\"normal\"\n                                                    id={\n                                                        field.identifier +\n                                                        \"Start\"\n                                                    }\n                                                    label={field.startTitle}\n                                                    format=\"MM/dd/yyyy\"\n                                                    inputVariant=\"outlined\"\n                                                    fullWidth={true}\n                                                    size=\"medium\"\n                                                    value={\n                                                        !values[\n                                                            field.identifier\n                                                        ].startDate\n                                                            ? new Date()\n                                                            : new Date(\n                                                                  values[\n                                                                      field.identifier\n                                                                  ].startDate\n                                                              )\n                                                    }\n                                                    onChange={makeDateChangeHandler(\n                                                        field,\n                                                        \"startDate\"\n                                                    )}\n                                                />\n                                                <KeyboardDatePicker\n                                                    margin=\"normal\"\n                                                    id={\n                                                        field.identifier + \"End\"\n                                                    }\n                                                    label={field.endTitle}\n                                                    format=\"MM/dd/yyyy\"\n                                                    inputVariant=\"outlined\"\n                                                    fullWidth={true}\n                                                    size=\"medium\"\n                                                    value={\n                                                        !values[\n                                                            field.identifier\n                                                        ].endDate\n                                                            ? new Date()\n                                                            : new Date(\n                                                                  values[\n                                                                      field.identifier\n                                                                  ].endDate\n                                                              )\n                                                    }\n                                                    onChange={makeDateChangeHandler(\n                                                        field,\n                                                        \"endDate\"\n                                                    )}\n                                                />\n                                            </React.Fragment>\n                                        )}\n                                    </div>\n                                )}\n\n                                {field.type === \"select\" && renderSelect(field)}\n\n                                {field.type === \"multi_select\" &&\n                                    renderMultiSelect(field)}\n\n                                {field.type === \"email_address\" && (\n                                    <TextField\n                                        id={field.identifier}\n                                        label={field.label}\n                                        name={field.identifier}\n                                        type=\"text\"\n                                        fullWidth={true}\n                                        variant=\"outlined\"\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        error={!validateEmail(field)}\n                                        helperText={\n                                            validateEmail(field)\n                                                ? \"\"\n                                                : \"Please specify a valid email address.\"\n                                        }\n                                        size=\"medium\"\n                                    />\n                                )}\n\n                                {field.type === \"phone_number\" && (\n                                    <TextField\n                                        id={field.identifier}\n                                        label={field.label}\n                                        name={field.identifier}\n                                        type=\"text\"\n                                        fullWidth={true}\n                                        variant=\"outlined\"\n                                        required={field.required}\n                                        value={values[field.identifier]}\n                                        onChange={makeChangeHandler(field)}\n                                        error={!validatePhoneNumber(field)}\n                                        helperText={\n                                            validatePhoneNumber(field)\n                                                ? \"\"\n                                                : \"Please specify a valid phone number.\"\n                                        }\n                                        size=\"medium\"\n                                    />\n                                )}\n                            </Grid>\n                        ) : null\n                    )\n                )}\n            </Grid>\n        </MuiPickersUtilsProvider>\n    );\n}\n","export const NEW_ACCOUNT = \"NEW_ACCOUNT\";\nexport const FETCH_ACCOUNT_COMPLETE = \"FETCH_ACCOUNT_COMPLETE\";\nexport const FETCH_ACCOUNTS_COMPLETE = \"FETCH_ACCOUNTS_COMPLETE\";\nexport const EDIT_ACCOUNT = \"EDIT_ACCOUNT\";\nexport const CLEAR_ACCOUNT = \"CLEAR_ACCOUNT\";\n\nexport const NEW_SUBSCRIPTION = \"NEW_SUBSCRIPTION\";\nexport const FETCH_SUBSCRIPTION_COMPLETE = \"FETCH_SUBSCRIPTION_COMPLETE\";\nexport const FETCH_SUBSCRIPTIONS_COMPLETE = \"FETCH_SUBSCRIPTIONS_COMPLETE\";\nexport const EDIT_SUBSCRIPTION = \"EDIT_SUBSCRIPTION\";\nexport const CLEAR_SUBSCRIPTION = \"CLEAR_SUBSCRIPTION\";\n\nexport const NEW_INVOICE = \"NEW_INVOICE\";\nexport const FETCH_INVOICE_COMPLETE = \"FETCH_INVOICE_COMPLETE\";\nexport const FETCH_INVOICES_COMPLETE = \"FETCH_INVOICES_COMPLETE\";\nexport const EDIT_INVOICE = \"EDIT_INVOICE\";\nexport const CLEAR_INVOICE = \"CLEAR_INVOICE\";\n\nexport const NEW_TRANSACTION = \"NEW_TRANSACTION\";\nexport const FETCH_TRANSACTION_COMPLETE = \"FETCH_TRANSACTION_COMPLETE\";\nexport const FETCH_TRANSACTIONS_COMPLETE = \"FETCH_TRANSACTIONS_COMPLETE\";\nexport const EDIT_TRANSACTION = \"EDIT_TRANSACTION\";\nexport const CLEAR_TRANSACTION = \"CLEAR_TRANSACTION\";\n\nexport const NEW_PLAN = \"NEW_PLAN\";\nexport const FETCH_PLAN_COMPLETE = \"FETCH_PLAN_COMPLETE\";\nexport const FETCH_PLANS_COMPLETE = \"FETCH_PLANS_COMPLETE\";\nexport const EDIT_PLAN = \"EDIT_PLAN\";\nexport const CLEAR_PLAN = \"CLEAR_PLAN\";\n\nexport const FETCH_ANALYTICS_COMPLETE = \"FETCH_ANALYTICS_COMPLETE\";\n\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\";\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\n"],"sourceRoot":""}