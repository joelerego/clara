{"version":3,"sources":["../node_modules/@material-ui/icons/Delete.js","utils.js","workspace/transaction/ViewTransactions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","toDateString","date","toLocaleDateString","undefined","year","month","day","useStyles","makeStyles","theme","container","padding","headers","identifier","numeric","disablePadding","label","filterFields","type","title","startTitle","startIdentifier","endTitle","endIdentifier","options","defaultValue","option","startDate","Date","endDate","actions1","icon","AddIcon","primary","FilterIcon","ListIcon","DeleteIcon","actions2","CompactIcon","mapDispatchToProps","fetchTransactions","actions","newTransaction","connect","state","transactions","withRouter","props","history","location","params","queryString","parse","search","Number","classes","useState","selected","setSelected","keys","length","openFilter","setOpenFilter","compact","setCompact","defaultFilterValues","toFilterState","filterValues","setFilterValues","generateURL","values","flatValues","toURLParams","URLSearchParams","push","toString","actionNames","purchase","verify","refund","methodNames","cash","credit_card","debit_card","online","useEffect","selectionCount","onAction","className","item","lg","onSelected","rows","onClick","transaction","renderCellValue","row","rowIndex","column","columnIndex","action","paymentMethod","createdOn","amount","tax","fields","onValueChange","field","newValues","assign","onClear","defaultValues"],"mappings":"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","file":"static/js/15.17619701.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","export function toDateString(date) {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return date.toLocaleDateString(undefined, options);\n}\n","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport WorkspaceTable from \"../common/WorkspaceTable\";\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport WorkspaceFilter from \"../common/WorkspaceFilter\";\nimport { toURLParams, toFilterState } from \"../common/WorkspaceFilter\";\nimport * as actions from \"../../redux/actions\";\nimport { toDateString } from \"../../utils\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListIcon from \"@material-ui/icons/ViewList\";\nimport FilterIcon from \"@material-ui/icons/FilterList\";\nimport CompactIcon from \"@material-ui/icons/ViewCompact\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n}));\n\nconst headers = [\n    {\n        identifier: \"action\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Action\",\n    },\n    {\n        identifier: \"method\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Payment Method\",\n    },\n    {\n        identifier: \"date\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Date\",\n    },\n    {\n        identifier: \"amount\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Amount\",\n    },\n    {\n        identifier: \"tax\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Tax\",\n    },\n];\n\nconst filterFields = [\n    {\n        identifier: \"date_range\",\n        type: \"time_range\",\n        title: \"Time Range\",\n        startTitle: \"Start Date\",\n        startIdentifier: \"start_date\",\n        endTitle: \"End Date\",\n        endIdentifier: \"end_date\",\n        options: [\n            {\n                value: \"all_time\",\n                title: \"All Time\",\n            },\n            {\n                value: \"last_3_months\",\n                title: \"Last 3 Months\",\n            },\n            {\n                value: \"last_6_months\",\n                title: \"Last 6 Months\",\n            },\n            {\n                value: \"last_9_months\",\n                title: \"Last 9 Months\",\n            },\n            {\n                value: \"last_12_months\",\n                title: \"Last 12 Months\",\n            },\n            {\n                value: \"last_15_months\",\n                title: \"Last 15 Months\",\n            },\n            {\n                value: \"last_18_months\",\n                title: \"Last 18 Months\",\n            },\n            {\n                value: \"custom\",\n                title: \"Custom\",\n            },\n        ],\n        defaultValue: {\n            option: \"all_time\",\n            startDate: new Date(),\n            endDate: new Date(),\n        },\n    },\n    {\n        identifier: \"action_type\",\n        type: \"select\",\n        title: \"Action\",\n        options: [\n            {\n                value: \"purchase\",\n                title: \"Purchase\",\n            },\n            {\n                value: \"verify\",\n                title: \"Verification\",\n            },\n            {\n                value: \"refund\",\n                title: \"Refund\",\n            },\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n    {\n        identifier: \"paymentMethod\",\n        type: \"select\",\n        title: \"Payment Method\",\n        options: [\n            {\n                value: \"cash\",\n                title: \"Cash\",\n            },\n            {\n                value: \"debit_card\",\n                title: \"Debit Card\",\n            },\n            {\n                value: \"credit_card\",\n                title: \"Credit Card\",\n            },\n            {\n                value: \"online\",\n                title: \"Online / Netbanking\",\n            },\n            {\n                value: \"all\",\n                title: \"All\",\n            },\n        ],\n        defaultValue: \"all\",\n    },\n];\n\nconst actions1 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"default\",\n        title: \"Default\",\n        icon: ListIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nconst actions2 = [\n    {\n        identifier: \"new\",\n        title: \"New\",\n        icon: AddIcon,\n        primary: true,\n    },\n    {\n        identifier: \"filter\",\n        title: \"Filter\",\n        icon: FilterIcon,\n        primary: true,\n    },\n    {\n        identifier: \"compact\",\n        title: \"Compact\",\n        icon: CompactIcon,\n        primary: true,\n    },\n    {\n        identifier: \"delete\",\n        title: \"Delete\",\n        icon: DeleteIcon,\n        primary: false,\n    },\n];\n\nfunction ViewTransactions(props) {\n    const {\n        transactions,\n        fetchTransactions,\n        newTransaction,\n        history,\n        location,\n    } = props;\n    const params = queryString.parse(location.search);\n\n    if (\"start_date\" in params) {\n        params[\"start_date\"] = new Date(Number(params[\"start_date\"]));\n    }\n    if (\"end_date\" in params) {\n        params[\"end_date\"] = new Date(Number(params[\"end_date\"]));\n    }\n    const classes = useStyles();\n    const [selected, setSelected] = useState([]);\n    const [openFilter, setOpenFilter] = useState(\n        Object.keys(params).length > 0\n    );\n    const [compact, setCompact] = useState(false);\n\n    // TODO: Should we cache this?\n    const defaultFilterValues = toFilterState(filterFields, params);\n    const [filterValues, setFilterValues] = useState(defaultFilterValues);\n\n    const handleAction = (type) => {\n        if (type === \"new\") {\n            newTransaction();\n        } else if (type === \"filter\") {\n            setOpenFilter(!openFilter);\n        } else if (type === \"compact\" || type === \"default\") {\n            setCompact(!compact);\n        }\n    };\n\n    const generateURL = (values) => {\n        if (values) {\n            const flatValues = toURLParams(filterFields, values);\n            const params = new URLSearchParams(flatValues);\n\n            history.push(\"/transactions?\" + params.toString());\n        } else {\n            history.push(\"/transactions\");\n        }\n    };\n\n    const onClick = (transaction) => {\n        history.push(\"/transactions/\" + transaction.identifier);\n    };\n\n    // TODO: Create a deep copy without serializing !\n    const onFilterValueChange = (field, value) => {\n        const newValues = Object.assign({}, filterValues);\n        newValues[field] = value;\n        setFilterValues(newValues);\n        generateURL(newValues);\n    };\n\n    const onFilterClear = () => {\n        const defaultValues = toFilterState(filterFields, {});\n        setFilterValues(defaultValues);\n        generateURL(null);\n    };\n\n    const actionNames = {\n        purchase: \"Purchase\",\n        verify: \"Verification\",\n        refund: \"Refund\",\n    };\n\n    const methodNames = {\n        cash: \"Cash\",\n        credit_card: \"Credit Card\",\n        debit_card: \"Debit Card\",\n        online: \"Online / Netbanking\",\n    };\n\n    const renderCellValue = (row, rowIndex, column, columnIndex) => {\n        switch (column.identifier) {\n            case \"action\": {\n                return actionNames[row.action];\n            }\n\n            case \"method\": {\n                return methodNames[row.paymentMethod];\n            }\n\n            case \"date\": {\n                return toDateString(row.createdOn);\n            }\n\n            case \"amount\": {\n                return row.amount + \" INR\";\n            }\n\n            case \"tax\": {\n                return row.tax + \" INR\";\n            }\n\n            default: {\n                return \"Unknown Column\";\n            }\n        }\n    };\n\n    useEffect(() => {\n        const flatValues = toURLParams(filterFields, filterValues);\n        fetchTransactions(flatValues);\n    }, [fetchTransactions, filterValues]);\n\n    return (\n        <div>\n            <WorkspaceToolbar\n                title=\"Transactions\"\n                selectionCount={selected.length}\n                actions={compact ? actions1 : actions2}\n                onAction={handleAction}\n            />\n            <Grid container={true} className={classes.container}>\n                <Grid item={true} lg={openFilter ? 10 : 12}>\n                    <WorkspaceTable\n                        headers={headers}\n                        onSelected={setSelected}\n                        rows={transactions}\n                        selected={selected}\n                        compact={compact}\n                        onClick={onClick}\n                        renderCellValue={renderCellValue}\n                    />\n                </Grid>\n                {openFilter && (\n                    <Grid item={true} lg={2}>\n                        <WorkspaceFilter\n                            fields={filterFields}\n                            values={filterValues}\n                            onValueChange={onFilterValueChange}\n                            onClear={onFilterClear}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        transactions: state.transactions,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchTransactions: actions.fetchTransactions,\n    newTransaction: actions.newTransaction,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewTransactions));\n"],"sourceRoot":""}