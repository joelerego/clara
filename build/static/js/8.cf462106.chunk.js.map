{"version":3,"sources":["workspace/common/WorkspaceToolbar.js","../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","workspace/subscription/SubscriptionCard.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/ArrowForward.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","workspace/subscription/ViewSubscription.js"],"names":["useToolbarStyles","makeStyles","theme","appBar","color","palette","primary","background","toolbar","paddingLeft","spacing","paddingRight","buttons","marginLeft","action","textTransform","title","text","fontWeight","highlight","type","secondary","main","backgroundColor","lighten","light","dark","actionIcon","marginRight","WorkspaceToolbar","props","classes","selectionCount","actions","onAction","makeActionHandler","identifier","normalTitle","className","variant","id","component","selectedTitle","selected","position","elevation","clsx","map","size","onClick","icon","Fragment","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Card","React","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","root","withStyles","overflow","name","CardContent","_props$component","Component","padding","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","display","alignItems","useStyles","expand","transform","transition","transitions","create","duration","shortest","expandOpen","activeAvatar","green","trialAvatar","orange","fontSize","showMore","menuItem","fields","render","subscription","setupFee","trialPeriod","trialPeriodUnit","term","termUnit","renews","collection","renewsOn","startedOn","currentPeriodStart","currentPeriodEnd","pricePerUnit","estimatedTotal","SubscriptionCard","plan","onEdit","onPause","onCancel","createdOn","useState","menuAnchor","setMenuAnchor","avatar","substring","toUpperCase","event","target","subheader","anchorEl","keepMounted","open","Boolean","onClose","container","field","item","lg","CardHeader","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","Typography","content","flex","alignSelf","marginTop","createSvgIcon","Avatar","alt","childrenProp","children","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","justifyContent","flexShrink","width","height","fontFamily","typography","pxToRem","lineHeight","borderRadius","userSelect","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","subscriptionCard","maxWidth","section","marginBottom","sectionTitle","subscriptions","progress","top","left","mapDispatchToProps","fetchSubscription","clearSubscription","connect","state","withRouter","useParams","useEffect","billingPeriod","billingPeriodUnit","starts","status","pricePerBillingPeriod"],"mappings":"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","file":"static/js/8.cf462106.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    appBar: {\n        color: theme.palette.primary,\n        background: \"white\",\n    },\n    toolbar: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    buttons: {\n        marginLeft: \"auto\",\n    },\n    action: {\n        textTransform: \"none\",\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    title: {\n        color: theme.palette.text.primary,\n        fontWeight: 500,\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    actionIcon: {\n        marginRight: 4,\n    },\n}));\n\nfunction WorkspaceToolbar(props) {\n    const classes = useToolbarStyles();\n    const { title, selectionCount, actions, onAction } = props;\n\n    const makeActionHandler = (identifier) => () => onAction(identifier);\n\n    const normalTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n        >\n            {title}\n        </Typography>\n    );\n\n    const selectedTitle = (\n        <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            component=\"div\"\n        >\n            {selectionCount} selected\n        </Typography>\n    );\n\n    const selected = selectionCount > 0;\n\n    const recordButtons = () => {\n        if (actions) {\n            return actions.map(\n                (action) =>\n                    !action.primary && (\n                        <Button\n                            className={classes.action}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={makeActionHandler(action.identifier)}\n                        >\n                            <action.icon className={classes.actionIcon} />\n                            {action.title}\n                        </Button>\n                    )\n            );\n        }\n        return null;\n    };\n\n    const normalButtons = () => {\n        if (actions) {\n            return (\n                <React.Fragment>\n                    {actions.map(\n                        (action) =>\n                            action.primary && (\n                                <Button\n                                    className={classes.action}\n                                    variant=\"text\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    onClick={makeActionHandler(\n                                        action.identifier\n                                    )}\n                                >\n                                    <action.icon\n                                        className={classes.actionIcon}\n                                    />\n                                    {action.title}\n                                </Button>\n                            )\n                    )}\n                </React.Fragment>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <AppBar position=\"static\" elevation={1} className={classes.appBar}>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.highlight]: selected,\n                })}\n            >\n                {selected ? selectedTitle : normalTitle}\n\n                <div className={classes.buttons}>\n                    {selected ? recordButtons() : normalButtons()}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nWorkspaceToolbar.propTypes = {\n    selectionCount: PropTypes.number.isRequired,\n};\n\nexport default WorkspaceToolbar;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { green, orange } from \"@material-ui/core/colors\";\n\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Close\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport ShowMoreIcon from \"@material-ui/icons/ArrowForward\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    activeAvatar: {\n        backgroundColor: green[500],\n    },\n    trialAvatar: {\n        backgroundColor: orange[500],\n    },\n    title: {\n        fontWeight: 600,\n        fontSize: 14,\n    },\n    value: {\n        fontSize: 15,\n    },\n    showMore: {\n        marginLeft: \"auto\",\n        color: theme.palette.primary.main,\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    icon: {\n        display: \"inline-block\",\n        marginRight: 4,\n    },\n    menuItem: {\n        fontSize: 15,\n    },\n}));\n\nconst fields = [\n    {\n        identifier: \"setupFee\",\n        title: \"Setup Fee\",\n        size: 6,\n        render: (subscription) => subscription.setupFee + \" INR\",\n    },\n    {\n        identifier: \"trialPeriod\",\n        title: \"Trial Period\",\n        size: 6,\n        render: (subscription) =>\n            subscription.trialPeriod + \" \" + subscription.trialPeriodUnit,\n    },\n    {\n        identifier: \"term\",\n        title: \"Term\",\n        size: 6,\n        render: (subscription) =>\n            subscription.term + \" \" + subscription.termUnit,\n    },\n    {\n        identifier: \"renews\",\n        title: \"Renews\",\n        size: 6,\n        render: (subscription) => subscription.renews,\n    },\n    {\n        identifier: \"collection\",\n        title: \"Collection\",\n        size: 6,\n        render: (subscription) => subscription.collection,\n    },\n    {\n        identifier: \"renewsOn\",\n        title: \"Renews On\",\n        size: 6,\n        render: (subscription) => subscription.renewsOn,\n    },\n    {\n        identifier: \"startedOn\",\n        title: \"Started On\",\n        size: 6,\n        render: (subscription) => subscription.startedOn,\n    },\n    {\n        identifier: \"currentPeriod\",\n        title: \"Current Period\",\n        size: 12,\n        render: (subscription) =>\n            subscription.currentPeriodStart +\n            \" - \" +\n            subscription.currentPeriodEnd,\n    },\n    {\n        identifier: \"pricePerUnit\",\n        title: \"Price Per Unit\",\n        size: 6,\n        render: (subscription) => subscription.pricePerUnit + \" INR\",\n    },\n    {\n        identifier: \"estimatedTotal\",\n        title: \"Estimated Total\",\n        size: 6,\n        render: (subscription) => subscription.estimatedTotal + \" INR\",\n    },\n];\n\nfunction SubscriptionCard(props) {\n    const classes = useStyles();\n    const {\n        className,\n        plan,\n        onEdit,\n        onPause,\n        onCancel,\n        showMore,\n        createdOn,\n    } = props;\n    const [menuAnchor, setMenuAnchor] = useState(null);\n\n    const handleOpenMenu = (event) => setMenuAnchor(event.target);\n    const handleCloseMenu = () => setMenuAnchor(null);\n    const handleEdit = () => {\n        onEdit(\"id\");\n        setMenuAnchor(null);\n    };\n    const handlePause = () => {\n        onPause(\"id\");\n        setMenuAnchor(null);\n    };\n    const handleCancel = () => {\n        onCancel(\"id\");\n        setMenuAnchor(null);\n    };\n\n    return (\n        <Card className={clsx(classes.root, className)}>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.activeAvatar}>\n                        {plan.substring(0, 1).toUpperCase()}\n                    </Avatar>\n                }\n                action={\n                    <React.Fragment>\n                        <IconButton onClick={handleOpenMenu}>\n                            <MoreIcon />\n                        </IconButton>\n                    </React.Fragment>\n                }\n                title={plan}\n                subheader={createdOn}\n            />\n\n            <Menu\n                anchorEl={menuAnchor}\n                keepMounted\n                open={Boolean(menuAnchor)}\n                onClose={handleCloseMenu}\n            >\n                <MenuItem onClick={handleEdit} className={classes.menuItem}>\n                    <EditIcon className={classes.icon} />\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={handlePause} className={classes.menuItem}>\n                    <PauseIcon className={classes.icon} />\n                    Pause\n                </MenuItem>\n                <MenuItem onClick={handleCancel} className={classes.menuItem}>\n                    <CancelIcon className={classes.icon} />\n                    Cancel\n                </MenuItem>\n            </Menu>\n\n            <CardContent>\n                <Grid container={true} spacing={2}>\n                    {fields.map((field) => (\n                        <React.Fragment>\n                            <Grid item={true} lg={field.size}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    color=\"textSecondary\"\n                                    className={classes.title}\n                                >\n                                    {field.title}\n                                </Typography>\n                                <Typography className={classes.value}>\n                                    {field.render(props)}\n                                </Typography>\n                            </Grid>\n                        </React.Fragment>\n                    ))}\n                </Grid>\n            </CardContent>\n            {showMore && (\n                <CardActions disableSpacing>\n                    <Button className={classes.showMore} size=\"small\">\n                        <ShowMoreIcon className={classes.icon} />\n                        Show More\n                    </Button>\n                </CardActions>\n            )}\n        </Card>\n    );\n}\n\nexport default SubscriptionCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport WorkspaceToolbar from \"../common/WorkspaceToolbar\";\nimport SubscriptionCard from \"../subscription/SubscriptionCard\";\nimport * as actions from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        padding: 16,\n    },\n    subscriptionCard: {\n        maxWidth: 600,\n    },\n    section: {\n        marginBottom: 32,\n    },\n    sectionTitle: {\n        fontSize: 20,\n        marginBottom: 16,\n        fontWeight: 500,\n    },\n    subscriptions: {},\n    progress: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -24,\n        marginLeft: -24,\n    },\n}));\n\n// Some fields aren't being rendered.\nfunction ViewSubscription(props) {\n    const classes = useStyles();\n    const { fetchSubscription, clearSubscription, subscription } = props;\n    const { identifier } = useParams();\n\n    useEffect(() => {\n        fetchSubscription(identifier);\n        return clearSubscription;\n    }, [identifier, fetchSubscription, clearSubscription]);\n\n    return (\n        <div>\n            <WorkspaceToolbar title=\"Subscription\" />\n            {!subscription && (\n                <CircularProgress size=\"48px\" className={classes.progress} />\n            )}\n            {subscription && (\n                <div className={classes.container}>\n                    <div className={classes.section}>\n                        <Typography\n                            variant=\"h2\"\n                            className={classes.sectionTitle}\n                        >\n                            General\n                        </Typography>\n                        <SubscriptionCard\n                            className={classes.subscriptionCard}\n                            currentPeriodStart={\n                                /* subscription.currentPeriodStart */ \"TODO\"\n                            }\n                            currentPeriodEnd={\n                                /* subscription.currentPeriodEnd */ \"TODO\"\n                            }\n                            plan={subscription.plan.name}\n                            billingPeriod={subscription.billingPeriod}\n                            billingPeriodUnit={subscription.billingPeriodUnit}\n                            setupFee={subscription.setupFee}\n                            trialPeriod={subscription.trialPeriod}\n                            trialPeriodUnit={subscription.trialPeriodUnit}\n                            startedOn={subscription.starts}\n                            term={subscription.term}\n                            termUnit={subscription.termUnit}\n                            renews={/*subscription.renews*/ \"TODO\"}\n                            createdOn={subscription.createdOn}\n                            status={\"active\"}\n                            collection={\"TODO\"}\n                            renewsOn={\"TODO\"}\n                            pricePerUnit={\n                                subscription.plan.pricePerBillingPeriod\n                            }\n                            estimatedTotal={\n                                subscription.plan.pricePerBillingPeriod +\n                                \" * units\"\n                            }\n                            showMore={false}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        subscription: state.subscription,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchSubscription: actions.fetchSubscription,\n    clearSubscription: actions.clearSubscription,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(ViewSubscription));\n"],"sourceRoot":""}